{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/modals/CopyPlaylistModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { GET_PLAYLIST } from '../sidebar/Sidebar';\nconst ADD_PLAYLIST = gql`\n    mutation addPlaylist (\n        $id: String!\n        $username: String!\n        $title: String!\n    ) {\n        addPlaylist (\n            id: $id\n            username: $username\n            title: $title\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_PLAYLIST_SONGS = gql`\n    mutation updatePlaylistSongs(\n        $id: String!\n        $songs: [SongInput]!\n    ) {\n        updatePlaylistSongs(\n            id: $id\n            songs: $songs\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_PLAYLIST_IDS = gql`\n    mutation updatePlaylistIDs (\n        $id: String!\n        $ownedPlaylistsID: [String]!\n        $collaborativePlaylistsID: [String]!\n        $followedPlaylistsID: [String]!\n    ) {\n        updatePlaylistIDs (\n            id: $id\n            ownedPlaylistsID: $ownedPlaylistsID\n            collaborativePlaylistsID: $collaborativePlaylistsID\n            followedPlaylistsID: $followedPlaylistsID\n        ) {\n            _id\n        }\n    }\n`;\n\nclass CopyPlaylistModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genre: \"\",\n      numPlays: 0,\n      numTracks: 0,\n      ownerName: this.props.user.username,\n      ownerID: this.props.user._id,\n      playlistPoints: 0,\n      privacyType: 0,\n      songs: [],\n      title: \"\"\n    };\n\n    this.playlistNameChange = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.componentDidMount = () => {\n      if (this.state.ownername == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }, this);\n      let user = this.props.user;\n      this.setState({\n        ownerName: user.username\n      });\n    };\n  }\n\n  render() {\n    if (this.state.ownerName == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }, this);\n    let user = this.props.user;\n    return /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: ADD_PLAYLIST,\n      refetchQueries: [{\n        query: GET_PLAYLIST\n      }],\n      children: (addPlaylist, {\n        addLoading,\n        addError\n      }) => /*#__PURE__*/_jsxDEV(Mutation, {\n        mutation: UPDATE_PLAYLIST_IDS,\n        children: (updatePlaylistIDs, {\n          updateLoading,\n          updateError\n        }) => /*#__PURE__*/_jsxDEV(Mutation, {\n          mutation: UPDATE_PLAYLIST_SONGS,\n          children: (updatePlaylistSongs, {\n            addLoading,\n            addError\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              id: \"showCreatePlaylist\",\n              show: this.props.show,\n              onHide: this.props.handleClose,\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                closeButton: true,\n                children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                  className: \"\",\n                  children: \"Copy Playlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                id: \"exportModalBody\",\n                children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    addPlaylist({\n                      variables: {\n                        id: user._id,\n                        username: user.username,\n                        title: this.state.title\n                      }\n                    }).then(res => {\n                      let playlistID = res.data.addPlaylist._id;\n                      let songs = this.props.playlist.songs;\n                      console.log('right here');\n                      console.log(songs);\n                      songs.forEach(song => {\n                        delete song['__typename'];\n                      });\n                      updatePlaylistSongs({\n                        variables: {\n                          id: playlistID,\n                          songs: songs\n                        }\n                      });\n                      let ownedIDs = user.ownedPlaylistsID;\n                      ownedIDs.push(playlistID);\n                      updatePlaylistIDs({\n                        variables: {\n                          id: user._id,\n                          ownedPlaylistsID: ownedIDs,\n                          collaborativePlaylistsID: user.collaborativePlaylistsID,\n                          followedPlaylistsID: user.followedPlaylistsID\n                        }\n                      }).then(this.props.history.push(`/app/playlist/${playlistID}`));\n                    });\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group col-8 text-center mx-auto\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"mt-2 mb-3 \",\n                      children: \"What's the name of your playlist?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control mb-4\",\n                      placeholder: \"My Playlist\",\n                      onChange: this.playlistNameChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row mb-4\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        className: \"col-6 btn btn-primary ml-2 text-center mx-auto\",\n                        onClick: this.props.handleClose,\n                        children: \"Create Playlist\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 49\n                }, this), (addLoading || updateLoading) && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 83\n                }, this), (addError || updateError) && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Error :O water u doing ( \\u0361\\xB0 \\u035C\\u0296 \\u0361\\xB0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 79\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, user._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CopyPlaylistModal;","map":{"version":3,"sources":["/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/modals/CopyPlaylistModal.js"],"names":["React","Component","Modal","Button","gql","Mutation","GET_PLAYLIST","ADD_PLAYLIST","UPDATE_PLAYLIST_SONGS","UPDATE_PLAYLIST_IDS","CopyPlaylistModal","state","genre","numPlays","numTracks","ownerName","props","user","username","ownerID","_id","playlistPoints","privacyType","songs","title","playlistNameChange","e","setState","target","value","componentDidMount","ownername","render","query","addPlaylist","addLoading","addError","updatePlaylistIDs","updateLoading","updateError","updatePlaylistSongs","show","handleClose","preventDefault","variables","id","then","res","playlistID","data","playlist","console","log","forEach","song","ownedIDs","ownedPlaylistsID","push","collaborativePlaylistsID","followedPlaylistsID","history"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo'\nimport { GET_PLAYLIST } from '../sidebar/Sidebar'\n\nconst ADD_PLAYLIST = gql`\n    mutation addPlaylist (\n        $id: String!\n        $username: String!\n        $title: String!\n    ) {\n        addPlaylist (\n            id: $id\n            username: $username\n            title: $title\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_PLAYLIST_SONGS = gql`\n    mutation updatePlaylistSongs(\n        $id: String!\n        $songs: [SongInput]!\n    ) {\n        updatePlaylistSongs(\n            id: $id\n            songs: $songs\n        ) {\n            _id\n        }\n    }\n`\n\nconst UPDATE_PLAYLIST_IDS = gql`\n    mutation updatePlaylistIDs (\n        $id: String!\n        $ownedPlaylistsID: [String]!\n        $collaborativePlaylistsID: [String]!\n        $followedPlaylistsID: [String]!\n    ) {\n        updatePlaylistIDs (\n            id: $id\n            ownedPlaylistsID: $ownedPlaylistsID\n            collaborativePlaylistsID: $collaborativePlaylistsID\n            followedPlaylistsID: $followedPlaylistsID\n        ) {\n            _id\n        }\n    }\n`\n\nclass CopyPlaylistModal extends Component {\n    state = {\n        genre: \"\",\n        numPlays: 0,\n        numTracks: 0,\n        ownerName: this.props.user.username,\n        ownerID: this.props.user._id,\n        playlistPoints: 0,\n        privacyType: 0,\n        songs: [],\n        title: \"\"\n    }\n\n    playlistNameChange = (e) => {\n        this.setState({ title: e.target.value })\n    }\n\n    componentDidMount = () => {\n        if (this.state.ownername == null)\n            return <div>Loading...</div>\n        let user = this.props.user\n        this.setState({ ownerName: user.username });\n    }\n\n    render() {\n        if (this.state.ownerName == null)\n            return <div>s</div>\n        let user = this.props.user;\n        return (\n            <Mutation mutation={ADD_PLAYLIST} key={user._id} refetchQueries={[{ query: GET_PLAYLIST }]}>\n                {(addPlaylist, { addLoading, addError }) => (\n                    <Mutation mutation={UPDATE_PLAYLIST_IDS} key={user._id}>\n                        {(updatePlaylistIDs, { updateLoading, updateError }) => (\n                            <Mutation mutation={UPDATE_PLAYLIST_SONGS} key={user._id}>\n                                {(updatePlaylistSongs, { addLoading, addError }) => (\n                                    <div className=\"container\">\n                                        <Modal id=\"showCreatePlaylist\" show={this.props.show} onHide={this.props.handleClose}>\n                                            <Modal.Header closeButton={true}>\n                                                <Modal.Title className=\"\">Copy Playlist</Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body id=\"exportModalBody\">\n                                                <form onSubmit={e => {\n                                                    e.preventDefault();\n                                                    addPlaylist({\n                                                        variables: {\n                                                            id: user._id,\n                                                            username: user.username,\n                                                            title: this.state.title\n                                                        }\n                                                    }).then(res => {\n                                                        let playlistID = res.data.addPlaylist._id;\n                                                        let songs= this.props.playlist.songs\n                                                        console.log('right here')\n                                                        console.log(songs)\n                                                        songs.forEach(song => {\n                                                            delete song['__typename']\n                                                        })\n                                                        updatePlaylistSongs({\n                                                            variables: {\n                                                                id: playlistID,\n                                                                songs: songs\n                                                            }\n                                                        })\n                                                        let ownedIDs = user.ownedPlaylistsID;\n                                                        ownedIDs.push(playlistID);\n                                                        updatePlaylistIDs({\n                                                            variables: {\n                                                                id: user._id,\n                                                                ownedPlaylistsID: ownedIDs,\n                                                                collaborativePlaylistsID: user.collaborativePlaylistsID,\n                                                                followedPlaylistsID: user.followedPlaylistsID\n                                                            }\n                                                        }).then(this.props.history.push(`/app/playlist/${playlistID}`))\n                                                    })\n                                                }}>\n                                                    <div className=\"form-group col-8 text-center mx-auto\">\n                                                        <label className=\"mt-2 mb-3 \">What's the name of your playlist?</label>\n                                                        <input className=\"form-control mb-4\" placeholder=\"My Playlist\" onChange={this.playlistNameChange} />\n                                                        <div className=\"row mb-4\">\n                                                            <Button type=\"submit\" className=\"col-6 btn btn-primary ml-2 text-center mx-auto\" onClick={this.props.handleClose}>Create Playlist</Button>\n                                                        </div>\n                                                    </div>\n                                                </form>\n                                                {(addLoading || updateLoading) && <p>Loading...</p>}\n                                                {(addError || updateError) && <p>Error :O water u doing ( ͡° ͜ʖ ͡°)</p>}\n                                            </Modal.Body>\n                                        </Modal>\n                                    </div>\n                                )}\n                            </Mutation>\n                        )}\n                    </Mutation>\n                )}\n            </Mutation>\n        )\n    }\n}\n\nexport default CopyPlaylistModal;\n"]},"metadata":{},"sourceType":"module"}
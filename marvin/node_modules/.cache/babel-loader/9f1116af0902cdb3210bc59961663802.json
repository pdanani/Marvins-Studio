{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/modals/CollaboratorSettingsModal.js\",\n    _s = $RefreshSig$();\n\nimport gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport { Mutation, Query, useQuery } from 'react-apollo';\nimport { Modal } from 'react-bootstrap';\nimport xMarkButton from '../../icons/x-mark.png';\nconst UPDATE_PLAYLIST_COLLABORATORS = gql`\n    mutation updatePlaylistCollaborators(\n        $id: String!\n        $collaborators: [String]!\n    ) {\n        updatePlaylistCollaborators(\n            id: $id\n            collaborators: $collaborators\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_COLLABORATIVE_PLAYLISTS = gql`\n    mutation updateCollaborativePlaylists(\n        $email: String!\n        $collaborativePlaylistsID: [String]!\n    ) {\n        updateCollaborativePlaylists(\n            email: $email\n            collaborativePlaylistsID: $collaborativePlaylistsID\n        ) {\n            email\n        }\n    }\n`;\nconst GET_USERS = gql`\n    query users {\n        users{\n            email\n            collaborativePlaylistsID\n        }\n    }\n`;\n\nfunction CollaboratorSettingsModal(props) {\n  _s();\n\n  const [nextCollaborator, setNextCollaborator] = useState(\"\");\n  const [collaborators, setCollaborators] = useState([...props.playlist.collaborators]);\n  const [error, setError] = useState(false);\n  const [invalid, setInvalid] = useState(\"\");\n\n  const updateNextCollaborator = e => {\n    setNextCollaborator(e.target.value);\n  };\n\n  const deleteCollaborator = (e, index) => {\n    let tempCollaborators = collaborators;\n    tempCollaborators.splice(index, 1);\n    setCollaborators(tempCollaborators);\n  };\n\n  const updateCollaborators = () => {\n    let tempCollaborators = collaborators;\n    tempCollaborators.push(nextCollaborator);\n    setNextCollaborator(\"\");\n    setCollaborators(tempCollaborators);\n  };\n\n  const {\n    data\n  } = useQuery(GET_USERS);\n\n  const updateAll = (e, updateCollaborativePlaylists, updatePlaylistCollaborators) => {\n    e.preventDefault();\n    if (nextCollaborator != \"\") updateCollaborators(); // check if collaborators need to be deleted\n\n    let collToDelete = [];\n    props.playlist.collaborators.forEach(currCollaborator => {\n      let find = collaborators.find(findColl => findColl == currCollaborator);\n      if (!find) collToDelete.push(currCollaborator);\n    }); // delete playlist from users' collaborative playlists\n\n    collToDelete.forEach((deleteColl, i) => {\n      if (data) {\n        let user = data.users.find(user => user.email == deleteColl);\n\n        if (!user) {\n          setError(true);\n          setInvalid(deleteColl);\n          setNextCollaborator(\"\");\n          return;\n        } else setError(false);\n\n        let collabPlaylists = [...user.collaborativePlaylistsID];\n        let index = collabPlaylists.findIndex(playlistID => playlistID == props.playlist._id); // check that playlist to delete is in user's set, then delete\n\n        if (index != -1) {\n          collabPlaylists.splice(index, 1);\n          updateCollaborativePlaylists({\n            variables: {\n              email: user.email,\n              collaborativePlaylistsID: collabPlaylists\n            }\n          });\n        }\n      }\n    }); // check if collaborators need to be added\n\n    let collToAdd = [];\n    collaborators.forEach(currCollaborator => {\n      let find = props.playlist.collaborators.find(findColl => findColl == currCollaborator);\n      if (!find) collToAdd.push(currCollaborator);\n    }); // add playlist to each users' collaborative playlists\n\n    collToAdd.forEach(addColl => {\n      if (data) {\n        let user = data.users.find(user => user.email == addColl);\n\n        if (!user) {\n          setError(true);\n          setInvalid(addColl);\n          deleteCollaborator(e, collaborators.findIndex(coll => coll === addColl));\n          return;\n        } else setError(false);\n\n        let collabPlaylists = [...user.collaborativePlaylistsID];\n        let index = collabPlaylists.findIndex(playlistID => playlistID == props.playlist._id); // check if playlist to add is not in user's set, if so add playlist\n\n        if (index == -1) {\n          collabPlaylists.push(props.playlist._id);\n          updateCollaborativePlaylists({\n            variables: {\n              email: user.email,\n              collaborativePlaylistsID: collabPlaylists\n            }\n          });\n        }\n      }\n    });\n    updatePlaylistCollaborators({\n      variables: {\n        id: props.playlist._id,\n        collaborators: collaborators\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Mutation, {\n    mutation: UPDATE_PLAYLIST_COLLABORATORS,\n    children: (updatePlaylistCollaborators, {\n      collaboratorLoading,\n      collaboratorError\n    }) => /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: UPDATE_COLLABORATIVE_PLAYLISTS,\n      children: (updateCollaborativePlaylists, {\n        playlistLoading,\n        playlistError\n      }) => /*#__PURE__*/_jsxDEV(Modal, {\n        id: \"collaoratorSettingsModal\",\n        show: props.show,\n        onHide: props.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Collaborator Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          id: \"collaboratorSettingsModalBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onKeyUp: e => e.preventDefault(),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-8 text-center mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: collaborators ? collaborators.map((collaborator, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-9 mt-1\",\n                    children: collaborator\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn p-1\",\n                      type: \"button\",\n                      onClick: e => {\n                        deleteCollaborator(e, index);\n                        updateAll(e, updateCollaborativePlaylists, updatePlaylistCollaborators);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: xMarkButton,\n                        height: 22\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 53\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 49\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: nextCollaborator,\n                  onChange: updateNextCollaborator,\n                  onKeyPress: e => {\n                    if (e.key === 'Enter') {\n                      e.preventDefault();\n                      updateAll(e, updateCollaborativePlaylists, updatePlaylistCollaborators);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group-append\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary\",\n                    type: \"button\",\n                    onClick: e => {\n                      //updateCollaborators()\n                      console.log(e);\n                      updateAll(e, updateCollaborativePlaylists, updatePlaylistCollaborators);\n                    },\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), (collaboratorLoading || playlistLoading) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 78\n          }, this), (playlistError || error) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error getting collaborator \", invalid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)\n  }, props.playlist._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CollaboratorSettingsModal, \"GXxbWwg01IItwwLYoTpyyTNKV8M=\", false, function () {\n  return [useQuery];\n});\n\n_c = CollaboratorSettingsModal;\nexport default CollaboratorSettingsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollaboratorSettingsModal\");","map":{"version":3,"sources":["/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/modals/CollaboratorSettingsModal.js"],"names":["gql","React","useState","Mutation","Query","useQuery","Modal","xMarkButton","UPDATE_PLAYLIST_COLLABORATORS","UPDATE_COLLABORATIVE_PLAYLISTS","GET_USERS","CollaboratorSettingsModal","props","nextCollaborator","setNextCollaborator","collaborators","setCollaborators","playlist","error","setError","invalid","setInvalid","updateNextCollaborator","e","target","value","deleteCollaborator","index","tempCollaborators","splice","updateCollaborators","push","data","updateAll","updateCollaborativePlaylists","updatePlaylistCollaborators","preventDefault","collToDelete","forEach","currCollaborator","find","findColl","deleteColl","i","user","users","email","collabPlaylists","collaborativePlaylistsID","findIndex","playlistID","_id","variables","collToAdd","addColl","coll","id","collaboratorLoading","collaboratorError","playlistLoading","playlistError","show","handleClose","map","collaborator","key","console","log"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag'\nimport React, { useState } from 'react'\nimport { Mutation, Query, useQuery } from 'react-apollo'\nimport { Modal } from 'react-bootstrap'\nimport xMarkButton from '../../icons/x-mark.png'\n\nconst UPDATE_PLAYLIST_COLLABORATORS = gql`\n    mutation updatePlaylistCollaborators(\n        $id: String!\n        $collaborators: [String]!\n    ) {\n        updatePlaylistCollaborators(\n            id: $id\n            collaborators: $collaborators\n        ) {\n            _id\n        }\n    }\n`\n\nconst UPDATE_COLLABORATIVE_PLAYLISTS = gql`\n    mutation updateCollaborativePlaylists(\n        $email: String!\n        $collaborativePlaylistsID: [String]!\n    ) {\n        updateCollaborativePlaylists(\n            email: $email\n            collaborativePlaylistsID: $collaborativePlaylistsID\n        ) {\n            email\n        }\n    }\n`\n\nconst GET_USERS = gql`\n    query users {\n        users{\n            email\n            collaborativePlaylistsID\n        }\n    }\n`\n\nfunction CollaboratorSettingsModal(props) {\n    const [nextCollaborator, setNextCollaborator] = useState(\"\")\n    const [collaborators, setCollaborators] = useState([...props.playlist.collaborators])\n    const [error, setError] = useState(false)\n    const [invalid, setInvalid] = useState(\"\")\n\n    const updateNextCollaborator = (e) => {\n        setNextCollaborator(e.target.value)\n    }\n\n    const deleteCollaborator = (e, index) => {\n        let tempCollaborators = collaborators\n        tempCollaborators.splice(index, 1)\n        setCollaborators(tempCollaborators)\n    }\n\n    const updateCollaborators = () => {\n        let tempCollaborators = collaborators\n        tempCollaborators.push(nextCollaborator)\n        setNextCollaborator(\"\")\n        setCollaborators(tempCollaborators)\n    }\n\n    const { data } = useQuery(GET_USERS)\n\n    const updateAll = (e, updateCollaborativePlaylists, updatePlaylistCollaborators) => {\n        e.preventDefault()\n        if (nextCollaborator != \"\") updateCollaborators()\n\n        // check if collaborators need to be deleted\n        let collToDelete = []\n        props.playlist.collaborators.forEach(currCollaborator => {\n            let find = collaborators.find(findColl => findColl == currCollaborator)\n            if (!find) collToDelete.push(currCollaborator)\n        })\n        // delete playlist from users' collaborative playlists\n        collToDelete.forEach((deleteColl, i) => {\n            if (data) {\n                let user = data.users.find(user => user.email == deleteColl)\n                if (!user) {\n                    setError(true)\n                    setInvalid(deleteColl)\n                    setNextCollaborator(\"\")\n                    return\n                }\n                else setError(false)\n                let collabPlaylists = [...user.collaborativePlaylistsID]\n                let index = collabPlaylists.findIndex(playlistID => playlistID == props.playlist._id)\n                // check that playlist to delete is in user's set, then delete\n                if (index != -1) {\n                    collabPlaylists.splice(index, 1);\n                    updateCollaborativePlaylists({\n                        variables: {\n                            email: user.email,\n                            collaborativePlaylistsID: collabPlaylists\n                        }\n                    })\n                }\n            }\n        })\n\n        // check if collaborators need to be added\n        let collToAdd = []\n        collaborators.forEach(currCollaborator => {\n            let find = props.playlist.collaborators.find(findColl => findColl == currCollaborator)\n            if (!find) collToAdd.push(currCollaborator)\n        })\n        // add playlist to each users' collaborative playlists\n        collToAdd.forEach((addColl) => {\n            if (data) {\n                let user = data.users.find(user => user.email == addColl)\n                if (!user) {\n                    setError(true)\n                    setInvalid(addColl)\n                    deleteCollaborator(e, collaborators.findIndex(coll => coll === addColl))\n                    return\n                }\n                else setError(false)\n                let collabPlaylists = [...user.collaborativePlaylistsID]\n                let index = collabPlaylists.findIndex(playlistID => playlistID == props.playlist._id)\n                // check if playlist to add is not in user's set, if so add playlist\n                if (index == -1) {\n                    collabPlaylists.push(props.playlist._id)\n                    updateCollaborativePlaylists({\n                        variables: {\n                            email: user.email,\n                            collaborativePlaylistsID: collabPlaylists\n                        }\n                    })\n                }\n            }\n        })\n        updatePlaylistCollaborators({\n            variables: {\n                id: props.playlist._id,\n                collaborators: collaborators\n            }\n        })\n    }\n    return (\n        <Mutation mutation={UPDATE_PLAYLIST_COLLABORATORS} key={props.playlist._id}>\n            {(updatePlaylistCollaborators, { collaboratorLoading, collaboratorError }) => (\n                <Mutation mutation={UPDATE_COLLABORATIVE_PLAYLISTS}>\n                    {(updateCollaborativePlaylists, { playlistLoading, playlistError }) => (\n                        <Modal id='collaoratorSettingsModal' show={props.show} onHide={props.handleClose}>\n                            <Modal.Header closeButton={true}>\n                                <Modal.Title>Collaborator Settings</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body id='collaboratorSettingsModalBody'>\n                                <form onKeyUp={(e) => e.preventDefault()}>\n                                    <div className='form-group col-8 text-center mx-auto'>\n                                        <div>\n                                            {collaborators ? collaborators.map((collaborator, index) => (\n                                                <div key={index} className='row mb-1'>\n                                                    <div className='col-9 mt-1'>{collaborator}</div>\n                                                    <div className='col-2'>\n                                                        <button className='btn p-1' type='button' onClick={(e) => {\n                                                            deleteCollaborator(e, index)\n                                                            updateAll(e, updateCollaborativePlaylists, updatePlaylistCollaborators)\n                                                        }}>\n                                                            <img src={xMarkButton} height={22}></img>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            )) : <div />}\n                                        </div>\n                                        <div className='input-group mb-1'>\n                                            <input type='text' className='form-control' value={nextCollaborator}\n                                                onChange={updateNextCollaborator}\n                                                onKeyPress={(e) => { \n                                                    if(e.key==='Enter') {\n                                                        e.preventDefault()\n                                                        updateAll(e, updateCollaborativePlaylists, updatePlaylistCollaborators)\n                                                    }\n                                                }}\n                                            ></input>\n                                            <div className='input-group-append'>\n                                                <button className='btn btn-primary' type='button' onClick={(e) => {\n                                                    //updateCollaborators()\n                                                    console.log(e)\n                                                    updateAll(e, updateCollaborativePlaylists, updatePlaylistCollaborators)\n                                                }}>+</button>\n                                            </div>\n                                        </div>\n                                        {/* <button type='submit' className='btn btn-primary'>Submit</button> */}\n                                    </div>\n                                </form>\n                                {(collaboratorLoading || playlistLoading) && <p>Loading...</p>}\n                                {(playlistError || error) && <p>Error getting collaborator {invalid}</p>}\n                            </Modal.Body>\n                        </Modal>\n                    )}\n                </Mutation>\n            )}\n        </Mutation>\n\n    )\n}\n\nexport default CollaboratorSettingsModal"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/modals/ChangePrivacyModal.js\";\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport gql from 'graphql-tag';\nimport { Mutation, Query } from 'react-apollo';\nconst UPDATE_PLAYLIST_PRIVACY = gql`\n    mutation updatePlaylistPrivacy(\n        $id: String!\n        $privacyType: Int!\n    ) {\n        updatePlaylistPrivacy (\n            id: $id\n            privacyType: $privacyType\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_PUBLIC_PLAYLISTS = gql`\n    mutation updatePublicPlaylists(\n        $id: String!\n        $publicPlaylistsID: [String]!\n    ) {\n        updatePublicPlaylists (\n            id: $id\n            publicPlaylistsID: $publicPlaylistsID\n        ) {\n            _id\n        }\n    }\n`;\nconst GET_COMMUNITY = gql`\n    query community($id: String!) {\n        community(id: $id) {\n            publicPlaylistsID\n        }\n    }\n`;\n\nclass ChangePrivacyModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      privacy: this.props.playlist.privacyType\n    };\n\n    this.privacyPublic = () => {\n      this.setState({\n        privacy: 0\n      });\n    };\n\n    this.privacyPrivate = () => {\n      this.setState({\n        privacy: 1\n      });\n    };\n  }\n\n  render() {\n    let publicPlaylists;\n    return /*#__PURE__*/_jsxDEV(Query, {\n      pollInterval: 500,\n      query: GET_COMMUNITY,\n      variables: {\n        id: \"5fc69c8b61fdeb5194781f2f\"\n      },\n      children: ({\n        loading,\n        error,\n        data\n      }) => {\n        if (loading) return 'Loading...';\n        if (error) return `Error! ${error.message}`;else publicPlaylists = data.community.publicPlaylistsID;\n        return /*#__PURE__*/_jsxDEV(Mutation, {\n          mutation: UPDATE_PLAYLIST_PRIVACY,\n          children: (updatePlaylistPrivacy, {\n            privLoading,\n            privError\n          }) => /*#__PURE__*/_jsxDEV(Mutation, {\n            mutation: UPDATE_PUBLIC_PLAYLISTS,\n            children: (updatePublicPlaylists, {\n              pubLoading,\n              pubError\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(Modal, {\n                id: \"changePrivacyModal\",\n                show: this.props.show,\n                onHide: this.props.handleClose,\n                children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                  closeButton: true,\n                  children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                    children: \"Change Privacy Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                  id: \"changePrivacyModalBody\",\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: e => {\n                      e.preventDefault(); // update privacy in playlist\n\n                      updatePlaylistPrivacy({\n                        variables: {\n                          id: this.props.playlist._id,\n                          privacyType: this.state.privacy\n                        }\n                      }); // determine if playlist is in publicPlaylists\n\n                      let inPublic = false;\n                      let index = 0;\n                      publicPlaylists.forEach((id, i) => {\n                        if (id === this.props.playlist._id) {\n                          inPublic = true;\n                          index = i;\n                        }\n                      }); // if playlist is public and not in publicPlaylists, add\n\n                      if (this.state.privacy === 0 && !inPublic) publicPlaylists.push(this.props.playlist._id); // if playlist is private and in publicPlaylists, remove\n\n                      if (this.state.privacy !== 0 && inPublic) publicPlaylists.splice(index, 1); // update public playlists\n\n                      updatePublicPlaylists({\n                        variables: {\n                          id: \"5fc69c8b61fdeb5194781f2f\",\n                          publicPlaylistsID: publicPlaylists\n                        }\n                      });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group col-8 text-center mx-auto\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"radio\",\n                        onClick: this.privacyPublic,\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            name: \"optradio\",\n                            className: \"mr-2\",\n                            checked: this.state.privacy === 0\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 105,\n                            columnNumber: 69\n                          }, this), \"Public\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 104,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"radio\",\n                        onClick: this.privacyPrivate,\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"radio\",\n                            name: \"optradio\",\n                            className: \"mr-2\",\n                            checked: this.state.privacy === 1\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 111,\n                            columnNumber: 69\n                          }, this), \"Private\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 110,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"col-6 btn btn-primary mt-2 text-center mx-auto\",\n                        onClick: this.props.handleClose,\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, this.props.playlist._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ChangePrivacyModal;","map":{"version":3,"sources":["/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/modals/ChangePrivacyModal.js"],"names":["React","Modal","gql","Mutation","Query","UPDATE_PLAYLIST_PRIVACY","UPDATE_PUBLIC_PLAYLISTS","GET_COMMUNITY","ChangePrivacyModal","Component","state","privacy","props","playlist","privacyType","privacyPublic","setState","privacyPrivate","render","publicPlaylists","id","loading","error","data","message","community","publicPlaylistsID","updatePlaylistPrivacy","privLoading","privError","updatePublicPlaylists","pubLoading","pubError","show","handleClose","e","preventDefault","variables","_id","inPublic","index","forEach","i","push","splice"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport gql from 'graphql-tag'\nimport { Mutation, Query } from 'react-apollo'\n\nconst UPDATE_PLAYLIST_PRIVACY = gql`\n    mutation updatePlaylistPrivacy(\n        $id: String!\n        $privacyType: Int!\n    ) {\n        updatePlaylistPrivacy (\n            id: $id\n            privacyType: $privacyType\n        ) {\n            _id\n        }\n    }\n`\n\nconst UPDATE_PUBLIC_PLAYLISTS = gql`\n    mutation updatePublicPlaylists(\n        $id: String!\n        $publicPlaylistsID: [String]!\n    ) {\n        updatePublicPlaylists (\n            id: $id\n            publicPlaylistsID: $publicPlaylistsID\n        ) {\n            _id\n        }\n    }\n`\n\nconst GET_COMMUNITY = gql`\n    query community($id: String!) {\n        community(id: $id) {\n            publicPlaylistsID\n        }\n    }\n`\n\nclass ChangePrivacyModal extends React.Component {\n    state = {\n        privacy: this.props.playlist.privacyType\n    }\n\n    privacyPublic = () => {\n        this.setState({ privacy: 0 })\n    }\n\n    privacyPrivate = () => {\n        this.setState({ privacy: 1 })\n    }\n\n    render() {\n        let publicPlaylists;\n        return(\n            <Query pollInterval={500} query={GET_COMMUNITY} variables={{ id: \"5fc69c8b61fdeb5194781f2f\"}}>\n                {({loading, error, data}) => {\n                    if(loading) return 'Loading...'\n                    if(error) return `Error! ${error.message}`\n                    else publicPlaylists = data.community.publicPlaylistsID\n                    return (\n                        <Mutation mutation={UPDATE_PLAYLIST_PRIVACY} key={this.props.playlist._id}>\n                            {(updatePlaylistPrivacy, { privLoading, privError }) => (\n                                <Mutation mutation={UPDATE_PUBLIC_PLAYLISTS}>\n                                    {(updatePublicPlaylists, { pubLoading, pubError }) => (\n                                        <div className='container'>\n                                            <Modal id='changePrivacyModal' show={this.props.show} onHide={this.props.handleClose}>\n                                                <Modal.Header closeButton={true}>\n                                                    <Modal.Title>Change Privacy Status</Modal.Title>\n                                                </Modal.Header>\n                                                <Modal.Body id='changePrivacyModalBody'>\n                                                    <form onSubmit={e => {\n                                                        e.preventDefault();\n                                                        // update privacy in playlist\n                                                        updatePlaylistPrivacy({ variables: {\n                                                            id: this.props.playlist._id,\n                                                            privacyType: this.state.privacy\n                                                        }})\n                                                        // determine if playlist is in publicPlaylists\n                                                        let inPublic = false;\n                                                        let index = 0;\n                                                        publicPlaylists.forEach((id, i) => {\n                                                            if (id === this.props.playlist._id) {\n                                                                inPublic = true;\n                                                                index = i;\n                                                            }\n                                                        })\n                                                        // if playlist is public and not in publicPlaylists, add\n                                                        if (this.state.privacy === 0 && !inPublic)\n                                                            publicPlaylists.push(this.props.playlist._id)\n                                                        // if playlist is private and in publicPlaylists, remove\n                                                        if(this.state.privacy !== 0 && inPublic)\n                                                            publicPlaylists.splice(index, 1)\n                                                        // update public playlists\n                                                        updatePublicPlaylists({ variables: {\n                                                            id: \"5fc69c8b61fdeb5194781f2f\",\n                                                            publicPlaylistsID: publicPlaylists\n                                                        }})\n                                                    }}>\n                                                        <div className='form-group col-8 text-center mx-auto'>\n                                                            <div className='radio' onClick={this.privacyPublic}>\n                                                                <label>\n                                                                    <input type='radio' name='optradio' className='mr-2' checked={this.state.privacy === 0}></input>\n                                                                    Public\n                                                                </label>\n                                                            </div>\n                                                            <div className='radio' onClick={this.privacyPrivate}>\n                                                                <label>\n                                                                    <input type='radio' name='optradio' className='mr-2' checked={this.state.privacy === 1}></input>\n                                                                    Private\n                                                                </label>\n                                                            </div>\n                                                            <button type='submit' className='col-6 btn btn-primary mt-2 text-center mx-auto' onClick={this.props.handleClose}>Submit</button>\n                                                        </div>\n                                                    </form>\n                                                </Modal.Body>\n                                            </Modal>\n                                        </div>\n                                    )}\n                                </Mutation>\n                            )}\n                        </Mutation>\n                    )\n                }}\n            </Query>\n        )\n    }\n}\n\nexport default ChangePrivacyModal"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/modals/CreatePlaylistModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { GET_PLAYLIST } from '../sidebar/Sidebar';\nconst ADD_PLAYLIST = gql`\n    mutation addPlaylist (\n        $id: String!\n        $username: String!\n        $title: String!\n    ) {\n        addPlaylist (\n            id: $id\n            username: $username\n            title: $title\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_PLAYLIST_IDS = gql`\n    mutation updatePlaylistIDs (\n        $id: String!\n        $ownedPlaylistsID: [String]!\n        $collaborativePlaylistsID: [String]!\n        $followedPlaylistsID: [String]!\n    ) {\n        updatePlaylistIDs (\n            id: $id\n            ownedPlaylistsID: $ownedPlaylistsID\n            collaborativePlaylistsID: $collaborativePlaylistsID\n            followedPlaylistsID: $followedPlaylistsID\n        ) {\n            _id\n        }\n    }\n`;\n\nclass CreatePlaylistModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genre: \"\",\n      numPlays: 0,\n      numTracks: 0,\n      ownerName: this.props.user.username,\n      ownerID: this.props.user._id,\n      playlistPoints: 0,\n      privacyType: 1,\n      songs: [],\n      title: \"\"\n    };\n\n    this.playlistNameChange = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.componentDidMount = () => {\n      if (this.state.ownername == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n      let user = this.props.user;\n      this.setState({\n        ownerName: user.username\n      });\n    };\n  }\n\n  render() {\n    if (this.state.ownerName == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this);\n    let user = this.props.user;\n    return /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: ADD_PLAYLIST,\n      refetchQueries: [{\n        query: GET_PLAYLIST\n      }],\n      children: (addPlaylist, {\n        addLoading,\n        addError\n      }) => /*#__PURE__*/_jsxDEV(Mutation, {\n        mutation: UPDATE_PLAYLIST_IDS,\n        children: (updatePlaylistIDs, {\n          updateLoading,\n          updateError\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Modal, {\n            id: \"showCreatePlaylist\",\n            show: this.props.show,\n            onHide: this.props.handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                className: \"\",\n                children: \"Create Playlist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              id: \"exportModalBody\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => {\n                  e.preventDefault();\n                  addPlaylist({\n                    variables: {\n                      id: user._id,\n                      username: user.username,\n                      title: this.state.title\n                    }\n                  }).then(res => {\n                    let playlistID = res.data.addPlaylist._id;\n                    let ownedIDs = user.ownedPlaylistsID;\n                    ownedIDs.push(playlistID);\n                    updatePlaylistIDs({\n                      variables: {\n                        id: user._id,\n                        ownedPlaylistsID: ownedIDs,\n                        collaborativePlaylistsID: user.collaborativePlaylistsID,\n                        followedPlaylistsID: user.followedPlaylistsID\n                      }\n                    }).then(this.props.history.push(`/app/playlist/${playlistID}`));\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group col-8 text-center mx-auto\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mt-2 mb-3 \",\n                    children: \"What's the name of your playlist?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-control mb-4\",\n                    placeholder: \"My Playlist\",\n                    onChange: this.playlistNameChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row mb-4\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      className: \"col-6 btn btn-primary ml-2 text-center mx-auto\",\n                      onClick: this.props.handleClose,\n                      children: \"Create Playlist\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this), (addLoading || updateLoading) && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 75\n              }, this), (addError || updateError) && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Error :O water u doing ( \\u0361\\xB0 \\u035C\\u0296 \\u0361\\xB0)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, user._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreatePlaylistModal;","map":{"version":3,"sources":["/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/modals/CreatePlaylistModal.js"],"names":["React","Component","Modal","Button","gql","Mutation","GET_PLAYLIST","ADD_PLAYLIST","UPDATE_PLAYLIST_IDS","CreatePlaylistModal","state","genre","numPlays","numTracks","ownerName","props","user","username","ownerID","_id","playlistPoints","privacyType","songs","title","playlistNameChange","e","setState","target","value","componentDidMount","ownername","render","query","addPlaylist","addLoading","addError","updatePlaylistIDs","updateLoading","updateError","show","handleClose","preventDefault","variables","id","then","res","playlistID","data","ownedIDs","ownedPlaylistsID","push","collaborativePlaylistsID","followedPlaylistsID","history"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Modal, Button} from 'react-bootstrap';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo'\nimport {GET_PLAYLIST} from '../sidebar/Sidebar'\n\nconst ADD_PLAYLIST = gql`\n    mutation addPlaylist (\n        $id: String!\n        $username: String!\n        $title: String!\n    ) {\n        addPlaylist (\n            id: $id\n            username: $username\n            title: $title\n        ) {\n            _id\n        }\n    }\n`;\n\nconst UPDATE_PLAYLIST_IDS = gql`\n    mutation updatePlaylistIDs (\n        $id: String!\n        $ownedPlaylistsID: [String]!\n        $collaborativePlaylistsID: [String]!\n        $followedPlaylistsID: [String]!\n    ) {\n        updatePlaylistIDs (\n            id: $id\n            ownedPlaylistsID: $ownedPlaylistsID\n            collaborativePlaylistsID: $collaborativePlaylistsID\n            followedPlaylistsID: $followedPlaylistsID\n        ) {\n            _id\n        }\n    }\n`\n\nclass CreatePlaylistModal extends Component {\n    state = {\n        genre: \"\",\n        numPlays: 0,\n        numTracks: 0,\n        ownerName: this.props.user.username,\n        ownerID: this.props.user._id,\n        playlistPoints: 0,\n        privacyType: 1,\n        songs: [],\n        title: \"\"\n    }\n\n    playlistNameChange = (e) => {\n        this.setState({ title: e.target.value })\n    }\n    \n    componentDidMount = () => {\n        if (this.state.ownername == null)\n\t\t\treturn <div>Loading...</div>\n        let user = this.props.user\n        this.setState({ownerName: user.username});\n    }\n\n    render() {\n        if (this.state.ownerName == null)\n\t\t\treturn <div>s</div>\n        let user = this.props.user;\n        return (\n            <Mutation mutation={ADD_PLAYLIST} key={user._id} refetchQueries={[{ query: GET_PLAYLIST }]}>\n                {(addPlaylist, { addLoading, addError }) => (\n                    <Mutation mutation={UPDATE_PLAYLIST_IDS} key={user._id}>\n                        {(updatePlaylistIDs, { updateLoading, updateError }) => (\n                            <div className=\"container\">\n                                <Modal id=\"showCreatePlaylist\" show={this.props.show} onHide={this.props.handleClose}>\n                                    <Modal.Header closeButton={true}>\n                                        <Modal.Title className=\"\">Create Playlist</Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body id=\"exportModalBody\">\n                                        <form onSubmit={e => {\n                                            e.preventDefault();\n                                            addPlaylist({ variables: {\n                                                id: user._id,\n                                                username: user.username,\n                                                title: this.state.title\n                                            }}).then(res => {\n                                                let playlistID = res.data.addPlaylist._id;\n                                                let ownedIDs = user.ownedPlaylistsID;\n                                                ownedIDs.push(playlistID);\n                                                updatePlaylistIDs({variables: {\n                                                    id: user._id,\n                                                    ownedPlaylistsID: ownedIDs,\n                                                    collaborativePlaylistsID: user.collaborativePlaylistsID,\n                                                    followedPlaylistsID: user.followedPlaylistsID\n                                                }}).then(this.props.history.push(`/app/playlist/${playlistID}`))\n                                            })\n                                        }}>\n                                            <div className=\"form-group col-8 text-center mx-auto\">\n                                                <label className=\"mt-2 mb-3 \">What's the name of your playlist?</label>\n                                                <input className=\"form-control mb-4\"  placeholder=\"My Playlist\" onChange={this.playlistNameChange}/>\n                                                <div className=\"row mb-4\">\n                                                    <Button type=\"submit\" className=\"col-6 btn btn-primary ml-2 text-center mx-auto\" onClick={this.props.handleClose}>Create Playlist</Button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                        {(addLoading || updateLoading) && <p>Loading...</p>}\n                                        {(addError || updateError) && <p>Error :O water u doing ( ͡° ͜ʖ ͡°)</p>}\n                                    </Modal.Body>\n                                </Modal>\n                            </div>\n                        )}\n                    </Mutation>\n                )}\n            </Mutation>\n\n\n            \n        )\n    }\n}\n\nexport default CreatePlaylistModal;\n"]},"metadata":{},"sourceType":"module"}
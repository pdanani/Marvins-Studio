{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/playlist_screen/PlaylistScreen.js\";\nimport React from 'react';\nimport DeletePlaylistModal from '../modals/DeletePlaylistModal.js';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Query, Mutation } from 'react-apollo';\nimport * as Icon from 'react-bootstrap-icons';\nimport EditPlaylistNameModal from '../modals/EditPlaylistNameModal.js';\nimport CopyPlaylistModal from '../modals/CopyPlaylistModal.js';\nimport PlaylistSong from './PlaylistSong';\nimport ChangePrivacyModal from '../modals/ChangePrivacyModal.js';\nimport CollaboratorSettingsModal from '../modals/CollaboratorSettingsModal.js';\nimport { Toast } from 'react-bootstrap';\n\nvar arraySort = require('array-sort');\n\nconst GET_PLAYLIST = gql`\n    query playlist($playlistID: String) {\n        playlist(id: $playlistID) {\n            _id\n            collaborators\n            genre\n            numPlays\n            numTracks\n            ownerName\n            ownerID\n            playlistPoints\n            privacyType\n            songs {\n                title\n                videoId\n                artistID\n                artistName\n                albumName\n                genre\n                albumArt\n                lastUpdated\n            }\n            title\n        }\n    }\n`;\nconst UPDATE_PLAYLIST_POINTS = gql`\n    mutation updatePlaylistPoints(\n        $id: String!\n        $playlistPoints: Int!\n    ) {\n        updatePlaylistPoints(\n            id: $id\n            playlistPoints: $playlistPoints\n        ) {\n            _id\n        }\n    }\n\n`;\nconst UPDATE_VOTED_PLAYLISTS = gql`\n    mutation updateVotedPlaylists(\n        $id: String!\n        $votedPlaylists: [VotedPlaylistInput]!\n    ) {\n    updateVotedPlaylists(\n        id: $id\n        votedPlaylists: $votedPlaylists\n    ) {\n        _id\n    }\n}\n`;\nconst UPDATE_USER_POINTS = gql`\n    mutation updateUserPoints(\n        $id: String!\n        $userPoints: Int!\n    ) {\n    updateUserPoints(\n        id: $id\n        userPoints: $userPoints\n    ) {\n        _id\n    }\n}\n`;\nconst UPDATE_PLAYLIST_SONGS = gql`\n    mutation updatePlaylistSongs(\n        $id: String!\n        $songs: [SongInput]!\n    ) {\n        updatePlaylistSongs(\n            id: $id\n            songs: $songs\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_RECENTLY_PLAYED = gql`\n    mutation updateRecentlyPlayed(\n        $id: String!\n        $recentlyPlayed: [String]!\n    ) {\n        updateRecentlyPlayed(\n            id: $id\n            recentlyPlayed: $recentlyPlayed\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_FOLLOWED_PLAYLISTS = gql`\n    mutation updateFollowedPlaylists(\n        $id: String!\n        $followedPlaylistsID: [String]!\n    ) {\n        updateFollowedPlaylists(\n            id: $id\n            followedPlaylistsID: $followedPlaylistsID\n        ) {\n            _id\n        }\n    }\n`;\nconst GET_USER = gql`\n    query user($userId: String) {\n        user(id: $userId) {\n            _id\n            email\n            password\n            username\n            userPoints\n            collaborativePlaylistsID\n            followedPlaylistsID\n            ownedPlaylistsID\n            recentlyPlayed\n            mostPlayed {\n                playlistId\n                count\n            }\n            votedPlaylists {\n                playlistID\n                votes\n            }\n            votedSOTD\n        }\n    }\n`;\n\nclass PlaylistScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDelete: false,\n      showEditName: false,\n      showDropdown: false,\n      showPrivacy: false,\n      showCollab: false,\n      hasVoted: false,\n      playlist: null,\n      vote: 0,\n      songs: null,\n      sort: 0,\n      attrSorting: \"\",\n      hovered: false,\n      hoveredDown: false,\n      owner: null,\n      showFollowed: false,\n      showUnfollowed: false\n    };\n\n    this.handleShowCollab = () => {\n      this.setState({\n        showCollab: true\n      });\n    };\n\n    this.handleShowPrivacy = () => {\n      this.setState({\n        showPrivacy: true\n      });\n    };\n\n    this.handleShowDelete = () => {\n      this.setState({\n        showDelete: true\n      });\n      console.log(\"done\");\n    };\n\n    this.handleShowEditName = () => {\n      this.setState({\n        showEditName: true\n      });\n    };\n\n    this.handleCloseCollab = () => {\n      this.setState({\n        showCollab: false\n      });\n    };\n\n    this.handleClosePrivacy = () => {\n      this.setState({\n        showPrivacy: false\n      });\n    };\n\n    this.handleShowCopyPlaylist = () => {\n      this.setState({\n        showCopyPlaylist: true\n      });\n    };\n\n    this.handleCloseDelete = () => {\n      this.setState({\n        showDelete: false\n      });\n      console.log(\"dosne\");\n    };\n\n    this.handleCloseCopyPlaylist = () => {\n      this.setState({\n        showCopyPlaylist: false\n      });\n      console.log(\"copy done\");\n    };\n\n    this.handleCloseEditName = () => {\n      this.setState({\n        showEditName: false\n      });\n    };\n\n    this.toggleDropdown = () => {\n      let show = !this.state.showDropdown;\n      this.setState({\n        showDropdown: show\n      });\n    };\n\n    this.toggleDisable = () => {\n      for (let k in this.props.user.votedPlaylists) {\n        console.log(k);\n\n        if (this.props.user.votedPlaylists[k] === this.props.match.params.id) {\n          this.setState({\n            hasVoted: true\n          });\n          console.log('found playlistID in votedplaylists');\n        }\n      }\n\n      if (this.state.hasVoted) {\n        let vote = this.props.user.votedPlaylists.findIndex(x => x.playlistID === this.props.match.params.id).votes;\n\n        if (vote == -1) {\n          this.setState({\n            vote: -1\n          });\n          console.log('has already disliked');\n        } else if (vote == 1) {\n          this.setState({\n            vote: 1\n          });\n          console.log('has already liked');\n        }\n      }\n    };\n\n    this.handlePlaylistVote = (vote, playlist, updateVotedPlaylists, updatePlaylistPoints, updateUserPoints, owner) => {\n      console.log(\"liking song\");\n      let votesList = this.props.user.votedPlaylists;\n      let idx = votesList.findIndex(votesList => votesList.playlistID === playlist._id);\n      let points = playlist.playlistPoints; //let userPoints = this.state.owner.userPoints;\n\n      let userPoints = owner.userPoints;\n\n      if (idx == -1) {\n        //if hasn't voted already\n        votesList.push({\n          playlistID: playlist._id,\n          votes: vote\n        });\n        points += vote;\n        userPoints += vote;\n      } else {\n        if (votesList[idx].votes == vote) {\n          //if clicks on same button again\n          points -= vote;\n          userPoints -= vote;\n          votesList.splice(idx, 1);\n        } else {\n          points += vote * 2;\n          userPoints += vote * 2;\n          votesList[idx].votes = vote; //  votesList.push(votedPlaylist)\n        }\n      }\n\n      updateVotedPlaylists({\n        variables: {\n          id: this.props.user._id,\n          votedPlaylists: votesList\n        }\n      });\n      updateVotedPlaylists({\n        variables: {\n          id: this.props.user._id,\n          votedPlaylists: votesList\n        }\n      });\n      updatePlaylistPoints({\n        variables: {\n          id: playlist._id,\n          playlistPoints: points\n        }\n      });\n      updateUserPoints({\n        variables: {\n          id: playlist.ownerID,\n          userPoints: userPoints\n        }\n      });\n      this.setState({\n        vote: vote\n      });\n    };\n\n    this.updateRecents = (updateRecentlyPlayed, playlist) => {\n      let recentlyPlayed = this.props.user.recentlyPlayed;\n      let idx = recentlyPlayed.indexOf(playlist._id);\n\n      if (idx == -1) {\n        //then push to arr\n        recentlyPlayed.push(playlist._id);\n      } else {\n        //slice and append\n        recentlyPlayed.splice(idx, 1);\n        recentlyPlayed.push(playlist._id);\n      }\n\n      updateRecentlyPlayed({\n        variables: {\n          id: this.props.user._id,\n          recentlyPlayed: recentlyPlayed\n        }\n      }); //mostplayed here\n    };\n\n    this.handleSortBy = (dbSongs, e) => {\n      let sortBy = e.target.id;\n      let songs = this.state.songs;\n      let sorted = JSON.parse(JSON.stringify(this.state.songs)); // Reset sorting by when sorting attribute changes\n\n      let sort = this.state.attrSorting === sortBy ? this.state.sort : 0;\n\n      if (sort == 0) {\n        // If songs are not sorted, sort by A-Z\n        arraySort(sorted, sortBy);\n        sort += 1;\n      } else if (sort == 1) {\n        // If the songs are already sorted by A-Z, then sort by Z-A\n        arraySort(sorted, sortBy, {\n          reverse: true\n        });\n        sort += 1;\n      } else {\n        sorted = dbSongs;\n        sort = 0;\n      }\n\n      this.setState({\n        songs: sorted,\n        sort: sort,\n        attrSorting: sortBy\n      });\n    };\n\n    this.handleDeleteFromState = index => {\n      let newSongs = this.state.songs;\n      newSongs.splice(index, 1);\n      this.setState({\n        songs: newSongs\n      });\n    };\n\n    this.followPlaylist = (user, playlist, updateFollowedPlaylists) => {\n      let followedPlaylists = user.followedPlaylistsID;\n      followedPlaylists.push(playlist._id);\n      updateFollowedPlaylists({\n        variables: {\n          id: user._id,\n          followedPlaylistsID: followedPlaylists\n        }\n      });\n      this.handleShowFollowed();\n    };\n\n    this.unfollowPlaylist = (user, playlist, updateFollowedPlaylists) => {\n      let followedPlaylists = user.followedPlaylistsID;\n      let index = followedPlaylists.findIndex(playlistID => playlistID === playlist._id);\n      followedPlaylists.splice(index, 1);\n      updateFollowedPlaylists({\n        variables: {\n          id: user._id,\n          followedPlaylistsID: followedPlaylists\n        }\n      });\n      this.handleShowUnfollowed();\n    };\n\n    this.handleShowFollowed = () => {\n      this.setState({\n        showFollowed: true\n      });\n    };\n\n    this.handleHideFollowed = () => {\n      this.setState({\n        showFollowed: false\n      });\n    };\n\n    this.handleShowUnfollowed = () => {\n      this.setState({\n        showUnfollowed: true\n      });\n    };\n\n    this.handleHideUnfollowed = () => {\n      this.setState({\n        showUnfollowed: false\n      });\n    };\n\n    this.handleQueuePlaylist = songs => {\n      for (let x = 0; x < songs.length; x++) {\n        this.props.handleQueueSong(songs[x]);\n      }\n    };\n\n    console.log(\"Passed props to playlistScreen\");\n  }\n\n  render() {\n    let playlist;\n    let user = this.props.user,\n        collaborators;\n    let owned,\n        loggedIn = this.props.user != null;\n    let songs, dbSongs;\n    let sort = this.state.sort,\n        attrSorting = this.state.attrSorting;\n    let privacyType;\n    console.log(this.state.songs);\n    let owner = null;\n    let followed;\n    return /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: UPDATE_FOLLOWED_PLAYLISTS,\n      children: (updateFollowedPlaylists, {\n        loading,\n        error\n      }) => /*#__PURE__*/_jsxDEV(Mutation, {\n        mutation: UPDATE_RECENTLY_PLAYED,\n        children: (updateRecentlyPlayed, {\n          loading,\n          error\n        }) => /*#__PURE__*/_jsxDEV(Mutation, {\n          mutation: UPDATE_VOTED_PLAYLISTS,\n          children: (updateVotedPlaylists, {\n            loading,\n            error\n          }) => /*#__PURE__*/_jsxDEV(Mutation, {\n            mutation: UPDATE_USER_POINTS,\n            children: (updateUserPoints, {\n              loading,\n              error\n            }) => /*#__PURE__*/_jsxDEV(Mutation, {\n              mutation: UPDATE_PLAYLIST_POINTS,\n              children: (updatePlaylistPoints, {\n                loading,\n                error\n              }) => /*#__PURE__*/_jsxDEV(Mutation, {\n                mutation: UPDATE_PLAYLIST_SONGS,\n                children: (updatePlaylistSongs, {\n                  loading,\n                  error\n                }) => /*#__PURE__*/_jsxDEV(Query, {\n                  pollInterval: 500,\n                  query: GET_PLAYLIST,\n                  variables: {\n                    playlistID: this.props.match.params.id\n                  },\n                  onCompleted: data => this.state.songs == null || this.state.songs !== data ? this.setState({\n                    songs: data.playlist.songs\n                  }) : \"\",\n                  children: ({\n                    loading,\n                    error,\n                    data\n                  }) => {\n                    if (loading) return 'Loading...';\n                    if (error) return `Error! ${error.message}`;else {\n                      playlist = data.playlist;\n                      owned = loggedIn ? user._id == playlist.ownerID : false;\n                      collaborators = playlist.collaborators;\n                      if (this.state.songs == null) this.setState({\n                        songs: playlist.songs\n                      });\n                      songs = this.state.songs !== null ? this.state.songs : playlist.songs;\n                      dbSongs = playlist.songs;\n                      followed = loggedIn ? user.followedPlaylistsID.find(playlistID => playlist._id) : null;\n                      privacyType = playlist.privacyType;\n                    }\n                    return /*#__PURE__*/_jsxDEV(Query, {\n                      pollInterval: 500,\n                      query: GET_USER,\n                      variables: {\n                        userId: playlist.ownerID\n                      },\n                      children: ({\n                        loading,\n                        error,\n                        data\n                      }) => {\n                        if (loading) return 'Loading...';\n                        if (error) return `Error! ${error.message}`;else owner = data.user;\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          id: \"playlist\",\n                          className: \"playpage\",\n                          style: {\n                            position: 'sticky',\n                            left: 15\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"row\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              id: \"top\",\n                              className: \"col ml-3 \",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"row\",\n                                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                  id: \"playlistInfoAndActions\",\n                                  className: \"col-8\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                    id: \"playlistName\",\n                                    className: \"row\",\n                                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                                      className: \"text-light ml-4 mt-5\",\n                                      children: [playlist.title + \" \", privacyType == 0 ? /*#__PURE__*/_jsxDEV(Icon.Globe2, {\n                                        color: \"#3d8af7\",\n                                        size: 20\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 457,\n                                        columnNumber: 117\n                                      }, this) : /*#__PURE__*/_jsxDEV(Icon.LockFill, {\n                                        color: \"#3d8af7\",\n                                        size: 20\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 458,\n                                        columnNumber: 119\n                                      }, this), \" \", collaborators.length !== 0 ? /*#__PURE__*/_jsxDEV(Icon.PeopleFill, {\n                                        color: \"#3d8af7\",\n                                        size: 20\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 461,\n                                        columnNumber: 143\n                                      }, this) : null]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 455,\n                                      columnNumber: 109\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 454,\n                                    columnNumber: 105\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    id: \"playlistOwner\",\n                                    className: \"row\",\n                                    children: data.user && data.user._id !== \"5fdc52a21d96445e6ab4d805\" ? /*#__PURE__*/_jsxDEV(Link, {\n                                      to: `/app/profile/${playlist.ownerID}`,\n                                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                                        className: \"text-light ml-4\",\n                                        children: [\" Playlist by \", playlist.ownerName, \" \"]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 467,\n                                        columnNumber: 113\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 466,\n                                      columnNumber: 109\n                                    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n                                      className: \"text-light ml-4\",\n                                      children: \" Playlist by Marvin's Studio\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 469,\n                                      columnNumber: 109\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 464,\n                                    columnNumber: 105\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    id: \"actions\",\n                                    className: \"row overflow-visible ml-3\",\n                                    style: {\n                                      marginTop: 60\n                                    },\n                                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                      className: \"btn btn-outline-primary border-0 bg-transparent\" //onClick={this.handlePlayAllP(playlist.songs, updateRecentlyPlayed, playlist)}\n                                      //    updateRecents = (updateRecentlyPlayed, playlist) => {\n                                      ,\n                                      onClick: () => {\n                                        if (loggedIn) this.updateRecents(updateRecentlyPlayed, playlist);\n                                        this.props.handlePlayPlaylist(songs);\n                                      },\n                                      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                        width: \"41\",\n                                        height: \"41\",\n                                        fill: \"currentColor\",\n                                        className: \"bi bi-play-circle-fill\",\n                                        viewBox: \"0 0 16 16\",\n                                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                                          fillRule: \"evenodd\",\n                                          d: \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 482,\n                                          columnNumber: 117\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 481,\n                                        columnNumber: 113\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 473,\n                                      columnNumber: 109\n                                    }, this), owned ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                      className: \"btn btn-outline-primary border-0 bg-transparent\",\n                                      onClick: this.handleShowDelete,\n                                      children: /*#__PURE__*/_jsxDEV(Icon.TrashFill, {\n                                        style: {\n                                          fontSize: 43\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 487,\n                                        columnNumber: 117\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 486,\n                                      columnNumber: 113\n                                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 489,\n                                      columnNumber: 115\n                                    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                                      direction: \"right\",\n                                      toggle: this.toggleDropdown,\n                                      isOpen: this.state.showDropdown,\n                                      children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n                                        className: \"btn btn-outline-primary border-0 bg-transparent\",\n                                        caret: false,\n                                        children: /*#__PURE__*/_jsxDEV(Icon.ThreeDots, {\n                                          style: {\n                                            fontSize: 54,\n                                            marginLeft: -5\n                                          }\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 492,\n                                          columnNumber: 117\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 491,\n                                        columnNumber: 113\n                                      }, this), owned ? /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                                        children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                                          onClick: this.handleShowCopyPlaylist,\n                                          children: \"Copy Playlist\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 496,\n                                          columnNumber: 121\n                                        }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                                          onClick: this.handleShowCollab,\n                                          children: \"Collaborator Settings\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 497,\n                                          columnNumber: 121\n                                        }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                                          onClick: this.handleShowEditName,\n                                          children: \"Edit Playlist Name\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 498,\n                                          columnNumber: 121\n                                        }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                                          onClick: this.handleShowPrivacy,\n                                          children: \"Privacy Settings\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 499,\n                                          columnNumber: 121\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 495,\n                                        columnNumber: 117\n                                      }, this) : /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                                        children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                                          onClick: this.handleShowCopyPlaylist,\n                                          children: \"Copy Playlist\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 502,\n                                          columnNumber: 121\n                                        }, this), followed ? /*#__PURE__*/_jsxDEV(DropdownItem, {\n                                          onClick: () => this.unfollowPlaylist(user, playlist, updateFollowedPlaylists),\n                                          children: \"Unfollow Playlist\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 504,\n                                          columnNumber: 125\n                                        }, this) : /*#__PURE__*/_jsxDEV(DropdownItem, {\n                                          onClick: () => this.followPlaylist(user, playlist, updateFollowedPlaylists),\n                                          children: \"Follow Playlist\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 505,\n                                          columnNumber: 125\n                                        }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                                          onClick: this.handleQueuePlaylist.bind(this, songs),\n                                          children: \"Queue entire playlist\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 507,\n                                          columnNumber: 121\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 501,\n                                        columnNumber: 117\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 490,\n                                      columnNumber: 109\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 472,\n                                    columnNumber: 105\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 453,\n                                  columnNumber: 101\n                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                  id: \"imgAndVotes\",\n                                  className: \"col-3 ml-2 mt-3\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"row mt-4 mb-2 justify-content-center\",\n                                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                        type: \"image\",\n                                        style: {\n                                          height: 170\n                                        },\n                                        src: songs[0] ? songs[0].albumArt : \"https://dalelyles.com/musicmp3s/no_cover.jpg\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 517,\n                                        columnNumber: 113\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 516,\n                                      columnNumber: 109\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 515,\n                                    columnNumber: 105\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"row justify-content-center\",\n                                    children: [this.props.user ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                      className: \"col-2 mx-0 btn btn-outline-primary bg-transparent border-0\",\n                                      onClick: this.handlePlaylistVote.bind(this, 1, playlist, updateVotedPlaylists, updatePlaylistPoints, updateUserPoints, owner),\n                                      onMouseOut: () => this.setState({\n                                        hovered: true\n                                      }),\n                                      onMouseOver: () => this.setState({\n                                        hovered: false\n                                      }),\n                                      children: this.state.vote == 1 ? /*#__PURE__*/_jsxDEV(Icon.HandThumbsUp, {\n                                        style: {\n                                          fontSize: 30,\n                                          marginBottom: 5,\n                                          color: '#3d8af7'\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 526,\n                                        columnNumber: 137\n                                      }, this) : /*#__PURE__*/_jsxDEV(Icon.HandThumbsUp, {\n                                        style: {\n                                          fontSize: 30,\n                                          marginBottom: 5,\n                                          color: 'white',\n                                          transform: `${this.state.hovered ? 'scale(1,1)' : 'scale(1.2,1.2)'}`\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 526,\n                                        columnNumber: 221\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 523,\n                                      columnNumber: 128\n                                    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                                      className: \"text-light\",\n                                      children: \"Playlist votes\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 527,\n                                      columnNumber: 121\n                                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                      id: \"playlistPoints\",\n                                      className: \"col-3 mx-0 mt-auto h4 text-light text-center\",\n                                      style: {\n                                        marginBottom: 12,\n                                        fontSize: 25\n                                      },\n                                      children: playlist.playlistPoints\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 528,\n                                      columnNumber: 109\n                                    }, this), this.props.user ? /*#__PURE__*/_jsxDEV(\"button\", {\n                                      className: \"col-2 mx-0 btn btn-outline-primary bg-transparent border-0\",\n                                      onClick: this.handlePlaylistVote.bind(this, -1, playlist, updateVotedPlaylists, updatePlaylistPoints, updateUserPoints, owner),\n                                      onMouseOut: () => this.setState({\n                                        hoveredDown: true\n                                      }),\n                                      onMouseOver: () => this.setState({\n                                        hoveredDown: false\n                                      }),\n                                      children: this.state.vote == -1 ? /*#__PURE__*/_jsxDEV(Icon.HandThumbsDown, {\n                                        style: {\n                                          fontSize: 30,\n                                          marginBottom: 5,\n                                          color: '#3d8af7'\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 533,\n                                        columnNumber: 142\n                                      }, this) : /*#__PURE__*/_jsxDEV(Icon.HandThumbsDown, {\n                                        style: {\n                                          fontSize: 30,\n                                          marginBottom: 5,\n                                          color: 'white',\n                                          transform: `${this.state.hoveredDown ? 'scale(1,1)' : 'scale(1.2,1.2)'}`\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 533,\n                                        columnNumber: 228\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 530,\n                                      columnNumber: 113\n                                    }, this) : null]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 522,\n                                    columnNumber: 105\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 514,\n                                  columnNumber: 101\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 452,\n                                columnNumber: 97\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 451,\n                              columnNumber: 93\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 450,\n                            columnNumber: 89\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"row mt-1 ml-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"col-3\",\n                              onClick: this.handleSortBy.bind(this, dbSongs),\n                              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                                id: \"title\",\n                                className: \"text-header\",\n                                children: [\"Title\", sort != 0 && attrSorting === \"title\" ? sort == 1 ? /*#__PURE__*/_jsxDEV(Icon.ArrowUpShort, {\n                                  color: \"royalblue\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 545,\n                                  columnNumber: 117\n                                }, this) : /*#__PURE__*/_jsxDEV(Icon.ArrowDownShort, {\n                                  color: \"royalblue\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 545,\n                                  columnNumber: 159\n                                }, this) : null]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 543,\n                                columnNumber: 97\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 542,\n                              columnNumber: 93\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"col-2\",\n                              onClick: this.handleSortBy.bind(this, dbSongs),\n                              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                                id: \"artistName\",\n                                className: \"text-header\",\n                                children: [\"Artist\", sort != 0 && attrSorting === \"artistName\" ? sort == 1 ? /*#__PURE__*/_jsxDEV(Icon.ArrowUpShort, {\n                                  color: \"royalblue\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 554,\n                                  columnNumber: 117\n                                }, this) : /*#__PURE__*/_jsxDEV(Icon.ArrowDownShort, {\n                                  color: \"royalblue\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 554,\n                                  columnNumber: 159\n                                }, this) : null]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 552,\n                                columnNumber: 97\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 551,\n                              columnNumber: 93\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"col-2\",\n                              onClick: this.handleSortBy.bind(this, dbSongs),\n                              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                                id: \"albumName\",\n                                className: \"text-header\",\n                                children: [\"Album\", sort != 0 && attrSorting === \"albumName\" ? sort == 1 ? /*#__PURE__*/_jsxDEV(Icon.ArrowUpShort, {\n                                  color: \"royalblue\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 562,\n                                  columnNumber: 117\n                                }, this) : /*#__PURE__*/_jsxDEV(Icon.ArrowDownShort, {\n                                  color: \"royalblue\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 562,\n                                  columnNumber: 159\n                                }, this) : null]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 560,\n                                columnNumber: 97\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 559,\n                              columnNumber: 93\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"col-3\",\n                              onClick: this.handleSortBy.bind(this, dbSongs),\n                              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                                id: \"lastUpdated\",\n                                className: \"text-header\",\n                                children: [\"Date Added\", sort != 0 && attrSorting === \"lastUpdated\" ? sort == 1 ? /*#__PURE__*/_jsxDEV(Icon.ArrowUpShort, {\n                                  color: \"royalblue\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 570,\n                                  columnNumber: 117\n                                }, this) : /*#__PURE__*/_jsxDEV(Icon.ArrowDownShort, {\n                                  color: \"royalblue\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 570,\n                                  columnNumber: 159\n                                }, this) : null]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 568,\n                                columnNumber: 97\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 567,\n                              columnNumber: 93\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 541,\n                            columnNumber: 89\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"divider song-divider\",\n                            style: {\n                              borderColor: \"#545454\"\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 576,\n                            columnNumber: 89\n                          }, this), songs.map((song, index) => /*#__PURE__*/_jsxDEV(PlaylistSong, {\n                            loggedIn: loggedIn,\n                            collaborators: collaborators,\n                            user: user,\n                            index: index,\n                            style: {\n                              cursor: 'pointer'\n                            },\n                            handleSongChange: this.props.handleSongChange,\n                            handleQueueSong: this.props.handleQueueSong,\n                            updateRecents: this.updateRecents,\n                            song: song,\n                            updatePlaylistSongs: updatePlaylistSongs,\n                            playlist: playlist,\n                            handleDeleteFromState: this.handleDeleteFromState,\n                            stateSongs: this.state.songs,\n                            updateRecentlyPlayed: updateRecentlyPlayed\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 580,\n                            columnNumber: 97\n                          }, this)), loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(DeletePlaylistModal, {\n                              show: this.state.showDelete,\n                              handleClose: this.handleCloseDelete,\n                              handleShow: this.handleShowDelete,\n                              user: this.props.user,\n                              history: this.props.history,\n                              playlist: playlist\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 589,\n                              columnNumber: 101\n                            }, this), /*#__PURE__*/_jsxDEV(EditPlaylistNameModal, {\n                              show: this.state.showEditName,\n                              handleClose: this.handleCloseEditName,\n                              handleShow: this.handleShowEditName,\n                              user: this.props.user,\n                              playlist: playlist\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 591,\n                              columnNumber: 101\n                            }, this), /*#__PURE__*/_jsxDEV(CopyPlaylistModal, {\n                              show: this.state.showCopyPlaylist,\n                              handleClose: this.handleCloseCopyPlaylist,\n                              handleShow: this.handleShowCopyPlaylist,\n                              user: this.props.user,\n                              history: this.props.history,\n                              playlist: playlist\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 593,\n                              columnNumber: 101\n                            }, this), /*#__PURE__*/_jsxDEV(ChangePrivacyModal, {\n                              show: this.state.showPrivacy,\n                              handleClose: this.handleClosePrivacy,\n                              handleShow: this.handleShowPrivacy,\n                              playlist: playlist\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 596,\n                              columnNumber: 101\n                            }, this), /*#__PURE__*/_jsxDEV(CollaboratorSettingsModal, {\n                              show: this.state.showCollab,\n                              handleClose: this.handleCloseCollab,\n                              handleShow: this.handleShowCollab,\n                              playlist: playlist\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 598,\n                              columnNumber: 101\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 588,\n                            columnNumber: 97\n                          }, this) : null, /*#__PURE__*/_jsxDEV(Toast, {\n                            show: this.state.showFollowed,\n                            onClose: this.handleHideFollowed,\n                            style: {\n                              top: 10,\n                              right: 20,\n                              position: \"fixed\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                              closeButton: true,\n                              children: \"Successfully Followed Playlist\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 604,\n                              columnNumber: 93\n                            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                              className: \"bg-white rounded-bottom\",\n                              children: [\"Followed \", playlist.title, \"!\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 605,\n                              columnNumber: 93\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 603,\n                            columnNumber: 89\n                          }, this), /*#__PURE__*/_jsxDEV(Toast, {\n                            show: this.state.showUnfollowed,\n                            onClose: this.handleHideUnfollowed,\n                            style: {\n                              top: 10,\n                              right: 20,\n                              position: \"fixed\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                              closeButton: true,\n                              children: \"Successfully Unfollowed Playlist\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 608,\n                              columnNumber: 93\n                            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                              className: \"bg-white rounded-bottom\",\n                              children: [\"Unfollowed \", playlist.title]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 609,\n                              columnNumber: 93\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 607,\n                            columnNumber: 89\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 449,\n                          columnNumber: 85\n                        }, this);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 73\n                    }, this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 61\n                }, this)\n              }, this.props.user !== null ? this.props.user._id : null, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 53\n              }, this)\n            }, this.props.user !== null ? this.props.user._id : null, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PlaylistScreen;","map":{"version":3,"sources":["/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/playlist_screen/PlaylistScreen.js"],"names":["React","DeletePlaylistModal","gql","Link","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Query","Mutation","Icon","EditPlaylistNameModal","CopyPlaylistModal","PlaylistSong","ChangePrivacyModal","CollaboratorSettingsModal","Toast","arraySort","require","GET_PLAYLIST","UPDATE_PLAYLIST_POINTS","UPDATE_VOTED_PLAYLISTS","UPDATE_USER_POINTS","UPDATE_PLAYLIST_SONGS","UPDATE_RECENTLY_PLAYED","UPDATE_FOLLOWED_PLAYLISTS","GET_USER","PlaylistScreen","Component","constructor","props","state","showDelete","showEditName","showDropdown","showPrivacy","showCollab","hasVoted","playlist","vote","songs","sort","attrSorting","hovered","hoveredDown","owner","showFollowed","showUnfollowed","handleShowCollab","setState","handleShowPrivacy","handleShowDelete","console","log","handleShowEditName","handleCloseCollab","handleClosePrivacy","handleShowCopyPlaylist","showCopyPlaylist","handleCloseDelete","handleCloseCopyPlaylist","handleCloseEditName","toggleDropdown","show","toggleDisable","k","user","votedPlaylists","match","params","id","findIndex","x","playlistID","votes","handlePlaylistVote","updateVotedPlaylists","updatePlaylistPoints","updateUserPoints","votesList","idx","_id","points","playlistPoints","userPoints","push","splice","variables","ownerID","updateRecents","updateRecentlyPlayed","recentlyPlayed","indexOf","handleSortBy","dbSongs","e","sortBy","target","sorted","JSON","parse","stringify","reverse","handleDeleteFromState","index","newSongs","followPlaylist","updateFollowedPlaylists","followedPlaylists","followedPlaylistsID","handleShowFollowed","unfollowPlaylist","handleShowUnfollowed","handleHideFollowed","handleHideUnfollowed","handleQueuePlaylist","length","handleQueueSong","render","collaborators","owned","loggedIn","privacyType","followed","loading","error","updatePlaylistSongs","data","message","find","userId","position","left","title","ownerName","marginTop","handlePlayPlaylist","fontSize","marginLeft","bind","height","albumArt","marginBottom","color","transform","borderColor","map","song","cursor","handleSongChange","history","top","right"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAqE,YAArE;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;AAEA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,yBAAP,MAAsC,wCAAtC;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,MAAMC,YAAY,GAAGjB,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;AA0BA,MAAMkB,sBAAsB,GAAGlB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAiBA,MAAMmB,sBAAsB,GAAGnB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMoB,kBAAkB,GAAGpB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMqB,qBAAqB,GAAGrB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMsB,sBAAsB,GAAGtB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMuB,yBAAyB,GAAGvB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMwB,QAAQ,GAAGxB,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;;AAyBA,MAAMyB,cAAN,SAA6B3B,KAAK,CAAC4B,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAKnBC,KALmB,GAKX;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJC,MAAAA,YAAY,EAAE,KAFV;AAGJC,MAAAA,YAAY,EAAE,KAHV;AAIJC,MAAAA,WAAW,EAAE,KAJT;AAKJC,MAAAA,UAAU,EAAE,KALR;AAMJC,MAAAA,QAAQ,EAAE,KANN;AAOJC,MAAAA,QAAQ,EAAE,IAPN;AAQJC,MAAAA,IAAI,EAAE,CARF;AASJC,MAAAA,KAAK,EAAE,IATH;AAUJC,MAAAA,IAAI,EAAE,CAVF;AAWJC,MAAAA,WAAW,EAAE,EAXT;AAYJC,MAAAA,OAAO,EAAE,KAZL;AAaJC,MAAAA,WAAW,EAAE,KAbT;AAcJC,MAAAA,KAAK,EAAE,IAdH;AAeJC,MAAAA,YAAY,EAAE,KAfV;AAgBJC,MAAAA,cAAc,EAAE;AAhBZ,KALW;;AAAA,SAwBnBC,gBAxBmB,GAwBA,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KA1BkB;;AAAA,SA4BnBc,iBA5BmB,GA4BC,MAAM;AACtB,WAAKD,QAAL,CAAc;AAAEd,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KA9BkB;;AAAA,SAgCnBgB,gBAhCmB,GAgCA,MAAM;AACrB,WAAKF,QAAL,CAAc;AAAEjB,QAAAA,UAAU,EAAE;AAAd,OAAd;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,KAnCkB;;AAAA,SAqCnBC,kBArCmB,GAqCE,MAAM;AACvB,WAAKL,QAAL,CAAc;AAAEhB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KAvCkB;;AAAA,SAyCnBsB,iBAzCmB,GAyCC,MAAM;AACtB,WAAKN,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KA3CkB;;AAAA,SA6CnBoB,kBA7CmB,GA6CE,MAAM;AACvB,WAAKP,QAAL,CAAc;AAAEd,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KA/CkB;;AAAA,SAgDnBsB,sBAhDmB,GAgDM,MAAM;AAC3B,WAAKR,QAAL,CAAc;AAAES,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACH,KAlDkB;;AAAA,SAoDnBC,iBApDmB,GAoDC,MAAM;AACtB,WAAKV,QAAL,CAAc;AAAEjB,QAAAA,UAAU,EAAE;AAAd,OAAd;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,KAvDkB;;AAAA,SAyDnBO,uBAzDmB,GAyDO,MAAM;AAC5B,WAAKX,QAAL,CAAc;AAAES,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KA5DkB;;AAAA,SA8DnBQ,mBA9DmB,GA8DG,MAAM;AACxB,WAAKZ,QAAL,CAAc;AAAEhB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KAhEkB;;AAAA,SAkEnB6B,cAlEmB,GAkEF,MAAM;AACnB,UAAIC,IAAI,GAAG,CAAC,KAAKhC,KAAL,CAAWG,YAAvB;AACA,WAAKe,QAAL,CAAc;AAAEf,QAAAA,YAAY,EAAE6B;AAAhB,OAAd;AACH,KArEkB;;AAAA,SAwEnBC,aAxEmB,GAwEH,MAAM;AAClB,WAAK,IAAIC,CAAT,IAAc,KAAKnC,KAAL,CAAWoC,IAAX,CAAgBC,cAA9B,EAA8C;AAC1Cf,QAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;;AACA,YAAI,KAAKnC,KAAL,CAAWoC,IAAX,CAAgBC,cAAhB,CAA+BF,CAA/B,MAAsC,KAAKnC,KAAL,CAAWsC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAlE,EAAsE;AAClE,eAAKrB,QAAL,CAAc;AAAEZ,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACAe,UAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH;AACJ;;AAED,UAAI,KAAKtB,KAAL,CAAWM,QAAf,EAAyB;AACrB,YAAIE,IAAI,GAAG,KAAKT,KAAL,CAAWoC,IAAX,CAAgBC,cAAhB,CAA+BI,SAA/B,CAAyCC,CAAC,IAAIA,CAAC,CAACC,UAAF,KAAiB,KAAK3C,KAAL,CAAWsC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAvF,EAA2FI,KAAtG;;AACA,YAAInC,IAAI,IAAI,CAAC,CAAb,EAAgB;AACZ,eAAKU,QAAL,CAAc;AAAEV,YAAAA,IAAI,EAAE,CAAC;AAAT,WAAd;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEH,SAJD,MAKK,IAAId,IAAI,IAAI,CAAZ,EAAe;AAChB,eAAKU,QAAL,CAAc;AAAEV,YAAAA,IAAI,EAAE;AAAR,WAAd;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEH;AACJ;AACJ,KA9FkB;;AAAA,SAgGnBsB,kBAhGmB,GAgGE,CAACpC,IAAD,EAAOD,QAAP,EAAiBsC,oBAAjB,EAAuCC,oBAAvC,EAA6DC,gBAA7D,EAA+EjC,KAA/E,KAAyF;AAE1GO,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAI0B,SAAS,GAAG,KAAKjD,KAAL,CAAWoC,IAAX,CAAgBC,cAAhC;AACA,UAAIa,GAAG,GAAGD,SAAS,CAACR,SAAV,CAAoBQ,SAAS,IAAIA,SAAS,CAACN,UAAV,KAAyBnC,QAAQ,CAAC2C,GAAnE,CAAV;AACA,UAAIC,MAAM,GAAG5C,QAAQ,CAAC6C,cAAtB,CAL0G,CAO1G;;AACA,UAAIC,UAAU,GAAGvC,KAAK,CAACuC,UAAvB;;AAEA,UAAIJ,GAAG,IAAI,CAAC,CAAZ,EAAe;AAAE;AACbD,QAAAA,SAAS,CAACM,IAAV,CAAe;AAAEZ,UAAAA,UAAU,EAAEnC,QAAQ,CAAC2C,GAAvB;AAA4BP,UAAAA,KAAK,EAAEnC;AAAnC,SAAf;AACA2C,QAAAA,MAAM,IAAI3C,IAAV;AACA6C,QAAAA,UAAU,IAAI7C,IAAd;AACH,OAJD,MAKK;AACD,YAAIwC,SAAS,CAACC,GAAD,CAAT,CAAeN,KAAf,IAAwBnC,IAA5B,EAAkC;AAAE;AAChC2C,UAAAA,MAAM,IAAI3C,IAAV;AACA6C,UAAAA,UAAU,IAAI7C,IAAd;AACAwC,UAAAA,SAAS,CAACO,MAAV,CAAiBN,GAAjB,EAAsB,CAAtB;AAEH,SALD,MAOK;AACDE,UAAAA,MAAM,IAAI3C,IAAI,GAAG,CAAjB;AACA6C,UAAAA,UAAU,IAAI7C,IAAI,GAAG,CAArB;AACAwC,UAAAA,SAAS,CAACC,GAAD,CAAT,CAAeN,KAAf,GAAuBnC,IAAvB,CAHC,CAID;AACH;AACJ;;AAEDqC,MAAAA,oBAAoB,CAAC;AACjBW,QAAAA,SAAS,EAAE;AACPjB,UAAAA,EAAE,EAAE,KAAKxC,KAAL,CAAWoC,IAAX,CAAgBe,GADb;AAEPd,UAAAA,cAAc,EAAEY;AAFT;AADM,OAAD,CAApB;AAOAH,MAAAA,oBAAoB,CAAC;AACjBW,QAAAA,SAAS,EAAE;AACPjB,UAAAA,EAAE,EAAE,KAAKxC,KAAL,CAAWoC,IAAX,CAAgBe,GADb;AAEPd,UAAAA,cAAc,EAAEY;AAFT;AADM,OAAD,CAApB;AAMAF,MAAAA,oBAAoB,CAAC;AACjBU,QAAAA,SAAS,EAAE;AACPjB,UAAAA,EAAE,EAAEhC,QAAQ,CAAC2C,GADN;AAEPE,UAAAA,cAAc,EAAED;AAFT;AADM,OAAD,CAApB;AAMAJ,MAAAA,gBAAgB,CAAC;AACbS,QAAAA,SAAS,EAAE;AACPjB,UAAAA,EAAE,EAAEhC,QAAQ,CAACkD,OADN;AAEPJ,UAAAA,UAAU,EAAEA;AAFL;AADE,OAAD,CAAhB;AAMA,WAAKnC,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAEA;AAAR,OAAd;AAEH,KA1JkB;;AAAA,SA8JnBkD,aA9JmB,GA8JH,CAACC,oBAAD,EAAuBpD,QAAvB,KAAoC;AAChD,UAAIqD,cAAc,GAAG,KAAK7D,KAAL,CAAWoC,IAAX,CAAgByB,cAArC;AACA,UAAIX,GAAG,GAAGW,cAAc,CAACC,OAAf,CAAuBtD,QAAQ,CAAC2C,GAAhC,CAAV;;AAEA,UAAID,GAAG,IAAI,CAAC,CAAZ,EAAe;AACX;AACAW,QAAAA,cAAc,CAACN,IAAf,CAAoB/C,QAAQ,CAAC2C,GAA7B;AACH,OAHD,MAIK;AACD;AACAU,QAAAA,cAAc,CAACL,MAAf,CAAsBN,GAAtB,EAA2B,CAA3B;AACAW,QAAAA,cAAc,CAACN,IAAf,CAAoB/C,QAAQ,CAAC2C,GAA7B;AAEH;;AACDS,MAAAA,oBAAoB,CAAC;AACjBH,QAAAA,SAAS,EAAE;AACPjB,UAAAA,EAAE,EAAE,KAAKxC,KAAL,CAAWoC,IAAX,CAAgBe,GADb;AAEPU,UAAAA,cAAc,EAAEA;AAFT;AADM,OAAD,CAApB,CAdgD,CAoBhD;AACH,KAnLkB;;AAAA,SAsLnBE,YAtLmB,GAsLJ,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC3B,UAAIC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAAS3B,EAAtB;AACA,UAAI9B,KAAK,GAAG,KAAKT,KAAL,CAAWS,KAAvB;AACA,UAAI0D,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKtE,KAAL,CAAWS,KAA1B,CAAX,CAAb,CAH2B,CAI3B;;AACA,UAAIC,IAAI,GAAG,KAAKV,KAAL,CAAWW,WAAX,KAA2BsD,MAA3B,GAAoC,KAAKjE,KAAL,CAAWU,IAA/C,GAAsD,CAAjE;;AAEA,UAAIA,IAAI,IAAI,CAAZ,EAAe;AAAE;AACbxB,QAAAA,SAAS,CAACiF,MAAD,EAASF,MAAT,CAAT;AACAvD,QAAAA,IAAI,IAAI,CAAR;AACH,OAHD,MAIK,IAAIA,IAAI,IAAI,CAAZ,EAAe;AAAC;AACjBxB,QAAAA,SAAS,CAACiF,MAAD,EAASF,MAAT,EAAiB;AAAEM,UAAAA,OAAO,EAAE;AAAX,SAAjB,CAAT;AACA7D,QAAAA,IAAI,IAAI,CAAR;AACH,OAHI,MAIA;AACDyD,QAAAA,MAAM,GAAGJ,OAAT;AACArD,QAAAA,IAAI,GAAG,CAAP;AACH;;AACD,WAAKQ,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE0D,MAAT;AAAiBzD,QAAAA,IAAI,EAAEA,IAAvB;AAA6BC,QAAAA,WAAW,EAAEsD;AAA1C,OAAd;AACH,KA1MkB;;AAAA,SA4MnBO,qBA5MmB,GA4MMC,KAAD,IAAW;AAC/B,UAAIC,QAAQ,GAAG,KAAK1E,KAAL,CAAWS,KAA1B;AACAiE,MAAAA,QAAQ,CAACnB,MAAT,CAAgBkB,KAAhB,EAAuB,CAAvB;AACA,WAAKvD,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAEiE;AAAT,OAAd;AACH,KAhNkB;;AAAA,SAkNnBC,cAlNmB,GAkNF,CAACxC,IAAD,EAAO5B,QAAP,EAAiBqE,uBAAjB,KAA6C;AAC1D,UAAIC,iBAAiB,GAAG1C,IAAI,CAAC2C,mBAA7B;AACAD,MAAAA,iBAAiB,CAACvB,IAAlB,CAAuB/C,QAAQ,CAAC2C,GAAhC;AACA0B,MAAAA,uBAAuB,CAAC;AAAEpB,QAAAA,SAAS,EAAE;AAAEjB,UAAAA,EAAE,EAAEJ,IAAI,CAACe,GAAX;AAAgB4B,UAAAA,mBAAmB,EAAED;AAArC;AAAb,OAAD,CAAvB;AACA,WAAKE,kBAAL;AACH,KAvNkB;;AAAA,SAyNnBC,gBAzNmB,GAyNA,CAAC7C,IAAD,EAAO5B,QAAP,EAAiBqE,uBAAjB,KAA6C;AAC5D,UAAIC,iBAAiB,GAAG1C,IAAI,CAAC2C,mBAA7B;AACA,UAAIL,KAAK,GAAGI,iBAAiB,CAACrC,SAAlB,CAA4BE,UAAU,IAAIA,UAAU,KAAKnC,QAAQ,CAAC2C,GAAlE,CAAZ;AACA2B,MAAAA,iBAAiB,CAACtB,MAAlB,CAAyBkB,KAAzB,EAAgC,CAAhC;AACAG,MAAAA,uBAAuB,CAAC;AAAEpB,QAAAA,SAAS,EAAE;AAAEjB,UAAAA,EAAE,EAAEJ,IAAI,CAACe,GAAX;AAAgB4B,UAAAA,mBAAmB,EAAED;AAArC;AAAb,OAAD,CAAvB;AACA,WAAKI,oBAAL;AACH,KA/NkB;;AAAA,SAiOnBF,kBAjOmB,GAiOE,MAAM;AACvB,WAAK7D,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KAnOkB;;AAAA,SAqOnBmE,kBArOmB,GAqOE,MAAM;AACvB,WAAKhE,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KAvOkB;;AAAA,SAyOnBkE,oBAzOmB,GAyOI,MAAM;AACzB,WAAK/D,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KA3OkB;;AAAA,SA6OnBmE,oBA7OmB,GA6OI,MAAM;AACzB,WAAKjE,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KA/OkB;;AAAA,SAiPnBoE,mBAjPmB,GAiPI3E,KAAD,IAAW;AAC7B,WAAK,IAAIgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,KAAK,CAAC4E,MAA1B,EAAkC5C,CAAC,EAAnC,EAAuC;AACnC,aAAK1C,KAAL,CAAWuF,eAAX,CAA2B7E,KAAK,CAACgC,CAAD,CAAhC;AACH;AACJ,KArPkB;;AAEfpB,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH;;AAoPDiE,EAAAA,MAAM,GAAG;AACL,QAAIhF,QAAJ;AACA,QAAI4B,IAAI,GAAG,KAAKpC,KAAL,CAAWoC,IAAtB;AAAA,QAA4BqD,aAA5B;AACA,QAAIC,KAAJ;AAAA,QAAWC,QAAQ,GAAG,KAAK3F,KAAL,CAAWoC,IAAX,IAAmB,IAAzC;AACA,QAAI1B,KAAJ,EAAWsD,OAAX;AACA,QAAIrD,IAAI,GAAG,KAAKV,KAAL,CAAWU,IAAtB;AAAA,QAA4BC,WAAW,GAAG,KAAKX,KAAL,CAAWW,WAArD;AACA,QAAIgF,WAAJ;AACAtE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWS,KAAvB;AACA,QAAIK,KAAK,GAAG,IAAZ;AACA,QAAI8E,QAAJ;AACA,wBACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAElG,yBAApB;AAAA,gBACK,CAACkF,uBAAD,EAA0B;AAAEiB,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAA1B,kBACG,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAErG,sBAApB;AAAA,kBACK,CAACkE,oBAAD,EAAuB;AAAEkC,UAAAA,OAAF;AAAWC,UAAAA;AAAX,SAAvB,kBACG,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAExG,sBAApB;AAAA,oBACK,CAACuD,oBAAD,EAAuB;AAAEgD,YAAAA,OAAF;AAAWC,YAAAA;AAAX,WAAvB,kBACG,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEvG,kBAApB;AAAA,sBACK,CAACwD,gBAAD,EAAmB;AAAE8C,cAAAA,OAAF;AAAWC,cAAAA;AAAX,aAAnB,kBACG,QAAC,QAAD;AAAU,cAAA,QAAQ,EAAEzG,sBAApB;AAAA,wBACK,CAACyD,oBAAD,EAAuB;AAAE+C,gBAAAA,OAAF;AAAWC,gBAAAA;AAAX,eAAvB,kBAEG,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAEtG,qBAApB;AAAA,0BACK,CAACuG,mBAAD,EAAsB;AAAEF,kBAAAA,OAAF;AAAWC,kBAAAA;AAAX,iBAAtB,kBAEG,QAAC,KAAD;AAAO,kBAAA,YAAY,EAAE,GAArB;AAA0B,kBAAA,KAAK,EAAE1G,YAAjC;AAA+C,kBAAA,SAAS,EAAE;AAAEsD,oBAAAA,UAAU,EAAE,KAAK3C,KAAL,CAAWsC,KAAX,CAAiBC,MAAjB,CAAwBC;AAAtC,mBAA1D;AACI,kBAAA,WAAW,EAAEyD,IAAI,IAAI,KAAKhG,KAAL,CAAWS,KAAX,IAAoB,IAApB,IAA4B,KAAKT,KAAL,CAAWS,KAAX,KAAqBuF,IAAjD,GAAwD,KAAK9E,QAAL,CAAc;AAAET,oBAAAA,KAAK,EAAEuF,IAAI,CAACzF,QAAL,CAAcE;AAAvB,mBAAd,CAAxD,GAAwG,EADjI;AAAA,4BAEK,CAAC;AAAEoF,oBAAAA,OAAF;AAAWC,oBAAAA,KAAX;AAAkBE,oBAAAA;AAAlB,mBAAD,KAA8B;AAC3B,wBAAIH,OAAJ,EAAa,OAAO,YAAP;AACb,wBAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACG,OAAQ,EAA/B,CAAX,KACK;AACD1F,sBAAAA,QAAQ,GAAGyF,IAAI,CAACzF,QAAhB;AACAkF,sBAAAA,KAAK,GAAGC,QAAQ,GAAGvD,IAAI,CAACe,GAAL,IAAY3C,QAAQ,CAACkD,OAAxB,GAAkC,KAAlD;AACA+B,sBAAAA,aAAa,GAAGjF,QAAQ,CAACiF,aAAzB;AACA,0BAAI,KAAKxF,KAAL,CAAWS,KAAX,IAAoB,IAAxB,EAA8B,KAAKS,QAAL,CAAc;AAAET,wBAAAA,KAAK,EAAEF,QAAQ,CAACE;AAAlB,uBAAd;AAC9BA,sBAAAA,KAAK,GAAG,KAAKT,KAAL,CAAWS,KAAX,KAAqB,IAArB,GAA4B,KAAKT,KAAL,CAAWS,KAAvC,GAA+CF,QAAQ,CAACE,KAAhE;AACAsD,sBAAAA,OAAO,GAAGxD,QAAQ,CAACE,KAAnB;AACAmF,sBAAAA,QAAQ,GAAGF,QAAQ,GAAGvD,IAAI,CAAC2C,mBAAL,CAAyBoB,IAAzB,CAA8BxD,UAAU,IAAInC,QAAQ,CAAC2C,GAArD,CAAH,GAA+D,IAAlF;AACAyC,sBAAAA,WAAW,GAAGpF,QAAQ,CAACoF,WAAvB;AACH;AACD,wCACI,QAAC,KAAD;AAAO,sBAAA,YAAY,EAAE,GAArB;AAA0B,sBAAA,KAAK,EAAEhG,QAAjC;AAA2C,sBAAA,SAAS,EAAE;AAAEwG,wBAAAA,MAAM,EAAE5F,QAAQ,CAACkD;AAAnB,uBAAtD;AAAA,gCACK,CAAC;AAAEoC,wBAAAA,OAAF;AAAWC,wBAAAA,KAAX;AAAkBE,wBAAAA;AAAlB,uBAAD,KAA8B;AAC3B,4BAAIH,OAAJ,EAAa,OAAO,YAAP;AACb,4BAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACG,OAAQ,EAA/B,CAAX,KACKnF,KAAK,GAAGkF,IAAI,CAAC7D,IAAb;AACL,4CACI;AAAK,0BAAA,EAAE,EAAC,UAAR;AAAmB,0BAAA,SAAS,EAAC,UAA7B;AAAwC,0BAAA,KAAK,EAAE;AAAEiE,4BAAAA,QAAQ,EAAE,QAAZ;AAAsBC,4BAAAA,IAAI,EAAE;AAA5B,2BAA/C;AAAA,kDACI;AAAK,4BAAA,SAAS,EAAC,KAAf;AAAA,mDACI;AAAK,8BAAA,EAAE,EAAC,KAAR;AAAc,8BAAA,SAAS,EAAC,WAAxB;AAAA,qDACI;AAAK,gCAAA,SAAS,EAAC,KAAf;AAAA,wDACI;AAAK,kCAAA,EAAE,EAAC,wBAAR;AAAiC,kCAAA,SAAS,EAAC,OAA3C;AAAA,0DACI;AAAK,oCAAA,EAAE,EAAC,cAAR;AAAuB,oCAAA,SAAS,EAAC,KAAjC;AAAA,2DACI;AAAI,sCAAA,SAAS,EAAC,sBAAd;AAAA,iDAAsC9F,QAAQ,CAAC+F,KAAT,GAAiB,GAAvD,EACKX,WAAW,IAAI,CAAf,gBACG,QAAC,IAAD,CAAM,MAAN;AAAa,wCAAA,KAAK,EAAC,SAAnB;AAA6B,wCAAA,IAAI,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,8CADH,gBAEK,QAAC,IAAD,CAAM,QAAN;AAAe,wCAAA,KAAK,EAAC,SAArB;AAA+B,wCAAA,IAAI,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,8CAHV,EAKK,GALL,EAMKH,aAAa,CAACH,MAAd,KAAyB,CAAzB,gBAA6B,QAAC,IAAD,CAAM,UAAN;AAAiB,wCAAA,KAAK,EAAC,SAAvB;AAAiC,wCAAA,IAAI,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,8CAA7B,GAA6E,IANlF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0CADJ,eAWI;AAAK,oCAAA,EAAE,EAAC,eAAR;AAAwB,oCAAA,SAAS,EAAC,KAAlC;AAAA,8CACCW,IAAI,CAAC7D,IAAL,IAAa6D,IAAI,CAAC7D,IAAL,CAAUe,GAAV,KAAkB,0BAA/B,gBACG,QAAC,IAAD;AAAM,sCAAA,EAAE,EAAG,gBAAe3C,QAAQ,CAACkD,OAAQ,EAA3C;AAAA,6DACI;AAAI,wCAAA,SAAS,EAAC,iBAAd;AAAA,oEAA8ClD,QAAQ,CAACgG,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4CADH,gBAIG;AAAI,sCAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,0CAXJ,eAmBI;AAAK,oCAAA,EAAE,EAAC,SAAR;AAAkB,oCAAA,SAAS,EAAC,2BAA5B;AAAwD,oCAAA,KAAK,EAAE;AAAEC,sCAAAA,SAAS,EAAE;AAAb,qCAA/D;AAAA,4DACI;AAAQ,sCAAA,SAAS,EAAC,iDAAlB,CACI;AACA;AAFJ;AAGI,sCAAA,OAAO,EAAE,MAAM;AACX,4CAAId,QAAJ,EAAc,KAAKhC,aAAL,CAAmBC,oBAAnB,EAAyCpD,QAAzC;AACd,6CAAKR,KAAL,CAAW0G,kBAAX,CAA8BhG,KAA9B;AACH,uCANL;AAAA,6DAQI;AAAK,wCAAA,KAAK,EAAC,4BAAX;AAAwC,wCAAA,KAAK,EAAC,IAA9C;AAAmD,wCAAA,MAAM,EAAC,IAA1D;AAA+D,wCAAA,IAAI,EAAC,cAApE;AAAmF,wCAAA,SAAS,EAAC,wBAA7F;AAAsH,wCAAA,OAAO,EAAC,WAA9H;AAAA,+DACI;AAAM,0CAAA,QAAQ,EAAC,SAAf;AAAyB,0CAAA,CAAC,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,4CADJ,EAaKgF,KAAK,gBACF;AAAQ,sCAAA,SAAS,EAAC,iDAAlB;AAAoE,sCAAA,OAAO,EAAE,KAAKrE,gBAAlF;AAAA,6DACI,QAAC,IAAD,CAAM,SAAN;AAAgB,wCAAA,KAAK,EAAE;AAAEsF,0CAAAA,QAAQ,EAAE;AAAZ;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4CADE,gBAIA;AAAA;AAAA;AAAA;AAAA,4CAjBV,eAkBI,QAAC,QAAD;AAAU,sCAAA,SAAS,EAAC,OAApB;AAA4B,sCAAA,MAAM,EAAE,KAAK3E,cAAzC;AAAyD,sCAAA,MAAM,EAAE,KAAK/B,KAAL,CAAWG,YAA5E;AAAA,8DACI,QAAC,cAAD;AAAgB,wCAAA,SAAS,EAAC,iDAA1B;AAA4E,wCAAA,KAAK,EAAE,KAAnF;AAAA,+DACI,QAAC,IAAD,CAAM,SAAN;AAAgB,0CAAA,KAAK,EAAE;AAAEuG,4CAAAA,QAAQ,EAAE,EAAZ;AAAgBC,4CAAAA,UAAU,EAAE,CAAC;AAA7B;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8CADJ,EAIKlB,KAAK,gBACF,QAAC,YAAD;AAAA,gEACI,QAAC,YAAD;AAAc,0CAAA,OAAO,EAAE,KAAK/D,sBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,eAEI,QAAC,YAAD;AAAc,0CAAA,OAAO,EAAE,KAAKT,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAFJ,eAGI,QAAC,YAAD;AAAc,0CAAA,OAAO,EAAE,KAAKM,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAHJ,eAII,QAAC,YAAD;AAAc,0CAAA,OAAO,EAAE,KAAKJ,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,8CADE,gBAOF,QAAC,YAAD;AAAA,gEACI,QAAC,YAAD;AAAc,0CAAA,OAAO,EAAE,KAAKO,sBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,EAEKkE,QAAQ,gBACL,QAAC,YAAD;AAAc,0CAAA,OAAO,EAAE,MAAM,KAAKZ,gBAAL,CAAsB7C,IAAtB,EAA4B5B,QAA5B,EAAsCqE,uBAAtC,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADK,gBAEL,QAAC,YAAD;AAAc,0CAAA,OAAO,EAAE,MAAM,KAAKD,cAAL,CAAoBxC,IAApB,EAA0B5B,QAA1B,EAAoCqE,uBAApC,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAJR,eAMI,QAAC,YAAD;AAAc,0CAAA,OAAO,EAAE,KAAKQ,mBAAL,CAAyBwB,IAAzB,CAA8B,IAA9B,EAAoCnG,KAApC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDANJ;AAAA;AAAA;AAAA;AAAA;AAAA,8CAXR;AAAA;AAAA;AAAA;AAAA;AAAA,4CAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,0CAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,eA8DI;AAAK,kCAAA,EAAE,EAAC,aAAR;AAAsB,kCAAA,SAAS,EAAC,iBAAhC;AAAA,0DACI;AAAK,oCAAA,SAAS,EAAC,sCAAf;AAAA,2DACI;AAAA,6DACI;AAAO,wCAAA,IAAI,EAAC,OAAZ;AAAoB,wCAAA,KAAK,EAAE;AAAEoG,0CAAAA,MAAM,EAAE;AAAV,yCAA3B;AACI,wCAAA,GAAG,EAAEpG,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAL,CAASqG,QAApB,GAA+B;AADxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0CADJ,eAQI;AAAK,oCAAA,SAAS,EAAC,4BAAf;AAAA,+CACK,KAAK/G,KAAL,CAAWoC,IAAX,gBAAkB;AAAQ,sCAAA,SAAS,EAAC,4DAAlB;AACf,sCAAA,OAAO,EAAE,KAAKS,kBAAL,CAAwBgE,IAAxB,CAA6B,IAA7B,EAAmC,CAAnC,EAAsCrG,QAAtC,EAAgDsC,oBAAhD,EAAsEC,oBAAtE,EAA4FC,gBAA5F,EAA8GjC,KAA9G,CADM;AACgH,sCAAA,UAAU,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAEN,wCAAAA,OAAO,EAAE;AAAX,uCAAd,CADlI;AAEf,sCAAA,WAAW,EAAE,MAAM,KAAKM,QAAL,CAAc;AAAEN,wCAAAA,OAAO,EAAE;AAAX,uCAAd,CAFJ;AAAA,gDAGd,KAAKZ,KAAL,CAAWQ,IAAX,IAAmB,CAAnB,gBAAuB,QAAC,IAAD,CAAM,YAAN;AAAmB,wCAAA,KAAK,EAAE;AAAEkG,0CAAAA,QAAQ,EAAE,EAAZ;AAAgBK,0CAAAA,YAAY,EAAE,CAA9B;AAAiCC,0CAAAA,KAAK,EAAE;AAAxC;AAA1B;AAAA;AAAA;AAAA;AAAA,8CAAvB,gBAA2G,QAAC,IAAD,CAAM,YAAN;AAAmB,wCAAA,KAAK,EAAE;AAAEN,0CAAAA,QAAQ,EAAE,EAAZ;AAAgBK,0CAAAA,YAAY,EAAE,CAA9B;AAAiCC,0CAAAA,KAAK,EAAE,OAAxC;AAAiDC,0CAAAA,SAAS,EAAG,GAAE,KAAKjH,KAAL,CAAWY,OAAX,GAAqB,YAArB,GAAoC,gBAAiB;AAApH;AAA1B;AAAA;AAAA;AAAA;AAAA;AAH7F;AAAA;AAAA;AAAA;AAAA,4CAAlB,gBAIW;AAAI,sCAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CALhB,eAMI;AAAK,sCAAA,EAAE,EAAC,gBAAR;AAAyB,sCAAA,SAAS,EAAC,8CAAnC;AAAkF,sCAAA,KAAK,EAAE;AAAEmG,wCAAAA,YAAY,EAAE,EAAhB;AAAoBL,wCAAAA,QAAQ,EAAE;AAA9B,uCAAzF;AAAA,gDAA8HnG,QAAQ,CAAC6C;AAAvI;AAAA;AAAA;AAAA;AAAA,4CANJ,EAOK,KAAKrD,KAAL,CAAWoC,IAAX,gBACG;AAAQ,sCAAA,SAAS,EAAC,4DAAlB;AACI,sCAAA,OAAO,EAAE,KAAKS,kBAAL,CAAwBgE,IAAxB,CAA6B,IAA7B,EAAmC,CAAC,CAApC,EAAuCrG,QAAvC,EAAiDsC,oBAAjD,EAAuEC,oBAAvE,EAA6FC,gBAA7F,EAA+GjC,KAA/G,CADb;AACoI,sCAAA,UAAU,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAEL,wCAAAA,WAAW,EAAE;AAAf,uCAAd,CADtJ;AAEI,sCAAA,WAAW,EAAE,MAAM,KAAKK,QAAL,CAAc;AAAEL,wCAAAA,WAAW,EAAE;AAAf,uCAAd,CAFvB;AAAA,gDAGK,KAAKb,KAAL,CAAWQ,IAAX,IAAmB,CAAC,CAApB,gBAAwB,QAAC,IAAD,CAAM,cAAN;AAAqB,wCAAA,KAAK,EAAE;AAAEkG,0CAAAA,QAAQ,EAAE,EAAZ;AAAgBK,0CAAAA,YAAY,EAAE,CAA9B;AAAiCC,0CAAAA,KAAK,EAAE;AAAxC;AAA5B;AAAA;AAAA;AAAA;AAAA,8CAAxB,gBAA8G,QAAC,IAAD,CAAM,cAAN;AAAqB,wCAAA,KAAK,EAAE;AAAEN,0CAAAA,QAAQ,EAAE,EAAZ;AAAgBK,0CAAAA,YAAY,EAAE,CAA9B;AAAiCC,0CAAAA,KAAK,EAAE,OAAxC;AAAiDC,0CAAAA,SAAS,EAAG,GAAE,KAAKjH,KAAL,CAAWa,WAAX,GAAyB,YAAzB,GAAwC,gBAAiB;AAAxH;AAA5B;AAAA;AAAA;AAAA;AAAA;AAHnH;AAAA;AAAA;AAAA;AAAA,4CADH,GAMK,IAbV;AAAA;AAAA;AAAA;AAAA;AAAA,0CARJ;AAAA;AAAA;AAAA;AAAA;AAAA,wCA9DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kCADJ,eA4FI;AAAK,4BAAA,SAAS,EAAC,eAAf;AAAA,oDACI;AAAK,8BAAA,SAAS,EAAC,OAAf;AAAuB,8BAAA,OAAO,EAAE,KAAKiD,YAAL,CAAkB8C,IAAlB,CAAuB,IAAvB,EAA6B7C,OAA7B,CAAhC;AAAA,qDACI;AAAI,gCAAA,EAAE,EAAC,OAAP;AAAe,gCAAA,SAAS,EAAC,aAAzB;AAAA,oDACErD,IAAI,IAAI,CAAR,IAAaC,WAAW,KAAK,OAA7B,GACMD,IAAI,IAAI,CAAR,gBAAY,QAAC,IAAD,CAAM,YAAN;AAAmB,kCAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,wCAAZ,gBAAsD,QAAC,IAAD,CAAM,cAAN;AAAqB,kCAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,wCAD5D,GAEQ,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oCADJ,eAUI;AAAK,8BAAA,SAAS,EAAC,OAAf;AAAuB,8BAAA,OAAO,EAAE,KAAKoD,YAAL,CAAkB8C,IAAlB,CAAuB,IAAvB,EAA6B7C,OAA7B,CAAhC;AAAA,qDACI;AAAI,gCAAA,EAAE,EAAC,YAAP;AAAoB,gCAAA,SAAS,EAAC,aAA9B;AAAA,qDACErD,IAAI,IAAI,CAAR,IAAaC,WAAW,KAAK,YAA7B,GACMD,IAAI,IAAI,CAAR,gBAAY,QAAC,IAAD,CAAM,YAAN;AAAmB,kCAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,wCAAZ,gBAAsD,QAAC,IAAD,CAAM,cAAN;AAAqB,kCAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,wCAD5D,GAEQ,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oCAVJ,eAkBI;AAAK,8BAAA,SAAS,EAAC,OAAf;AAAuB,8BAAA,OAAO,EAAE,KAAKoD,YAAL,CAAkB8C,IAAlB,CAAuB,IAAvB,EAA6B7C,OAA7B,CAAhC;AAAA,qDACI;AAAI,gCAAA,EAAE,EAAC,WAAP;AAAmB,gCAAA,SAAS,EAAC,aAA7B;AAAA,oDACCrD,IAAI,IAAI,CAAR,IAAaC,WAAW,KAAK,WAA7B,GACOD,IAAI,IAAI,CAAR,gBAAY,QAAC,IAAD,CAAM,YAAN;AAAmB,kCAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,wCAAZ,gBAAsD,QAAC,IAAD,CAAM,cAAN;AAAqB,kCAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,wCAD7D,GAES,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oCAlBJ,eA0BI;AAAK,8BAAA,SAAS,EAAC,OAAf;AAAuB,8BAAA,OAAO,EAAE,KAAKoD,YAAL,CAAkB8C,IAAlB,CAAuB,IAAvB,EAA6B7C,OAA7B,CAAhC;AAAA,qDACI;AAAI,gCAAA,EAAE,EAAC,aAAP;AAAqB,gCAAA,SAAS,EAAC,aAA/B;AAAA,yDACCrD,IAAI,IAAI,CAAR,IAAaC,WAAW,KAAK,aAA7B,GACOD,IAAI,IAAI,CAAR,gBAAY,QAAC,IAAD,CAAM,YAAN;AAAmB,kCAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,wCAAZ,gBAAsD,QAAC,IAAD,CAAM,cAAN;AAAqB,kCAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,wCAD7D,GAES,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oCA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kCA5FJ,eA+HI;AAAK,4BAAA,SAAS,EAAC,sBAAf;AAAsC,4BAAA,KAAK,EAAE;AAAEwG,8BAAAA,WAAW,EAAE;AAAf;AAA7C;AAAA;AAAA;AAAA;AAAA,kCA/HJ,EAkIQzG,KAAK,CAAC0G,GAAN,CAAU,CAACC,IAAD,EAAO3C,KAAP,kBACN,QAAC,YAAD;AAA0B,4BAAA,QAAQ,EAAEiB,QAApC;AAA8C,4BAAA,aAAa,EAAEF,aAA7D;AAA4E,4BAAA,IAAI,EAAErD,IAAlF;AAAwF,4BAAA,KAAK,EAAEsC,KAA/F;AAAsG,4BAAA,KAAK,EAAE;AAAE4C,8BAAAA,MAAM,EAAE;AAAV,6BAA7G;AACI,4BAAA,gBAAgB,EAAE,KAAKtH,KAAL,CAAWuH,gBADjC;AACmD,4BAAA,eAAe,EAAE,KAAKvH,KAAL,CAAWuF,eAD/E;AACgG,4BAAA,aAAa,EAAE,KAAK5B,aADpH;AAEI,4BAAA,IAAI,EAAE0D,IAFV;AAEgB,4BAAA,mBAAmB,EAAErB,mBAFrC;AAE0D,4BAAA,QAAQ,EAAExF,QAFpE;AAE8E,4BAAA,qBAAqB,EAAE,KAAKiE,qBAF1G;AAEiI,4BAAA,UAAU,EAAE,KAAKxE,KAAL,CAAWS,KAFxJ;AAE+J,4BAAA,oBAAoB,EAAEkD;AAFrL,6BAAmBc,KAAnB;AAAA;AAAA;AAAA;AAAA,kCADJ,CAlIR,EA0IQiB,QAAQ,gBACJ;AAAA,oDACI,QAAC,mBAAD;AAAqB,8BAAA,IAAI,EAAE,KAAK1F,KAAL,CAAWC,UAAtC;AAAkD,8BAAA,WAAW,EAAE,KAAK2B,iBAApE;AAAuF,8BAAA,UAAU,EAAE,KAAKR,gBAAxG;AACI,8BAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWoC,IADrB;AAC2B,8BAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWwH,OAD/C;AACwD,8BAAA,QAAQ,EAAEhH;AADlE;AAAA;AAAA;AAAA;AAAA,oCADJ,eAGI,QAAC,qBAAD;AAAuB,8BAAA,IAAI,EAAE,KAAKP,KAAL,CAAWE,YAAxC;AAAsD,8BAAA,WAAW,EAAE,KAAK4B,mBAAxE;AAA6F,8BAAA,UAAU,EAAE,KAAKP,kBAA9G;AACI,8BAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWoC,IADrB;AAC2B,8BAAA,QAAQ,EAAE5B;AADrC;AAAA;AAAA;AAAA;AAAA,oCAHJ,eAKI,QAAC,iBAAD;AAAmB,8BAAA,IAAI,EAAE,KAAKP,KAAL,CAAW2B,gBAApC;AAAsD,8BAAA,WAAW,EAAE,KAAKE,uBAAxE;AAAiG,8BAAA,UAAU,EAAE,KAAKH,sBAAlH;AACI,8BAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWoC,IADrB;AAC2B,8BAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWwH,OAD/C;AACwD,8BAAA,QAAQ,EAAEhH;AADlE;AAAA;AAAA;AAAA;AAAA,oCALJ,eAQI,QAAC,kBAAD;AAAoB,8BAAA,IAAI,EAAE,KAAKP,KAAL,CAAWI,WAArC;AAAkD,8BAAA,WAAW,EAAE,KAAKqB,kBAApE;AAAwF,8BAAA,UAAU,EAAE,KAAKN,iBAAzG;AACI,8BAAA,QAAQ,EAAEZ;AADd;AAAA;AAAA;AAAA;AAAA,oCARJ,eAUI,QAAC,yBAAD;AAA2B,8BAAA,IAAI,EAAE,KAAKP,KAAL,CAAWK,UAA5C;AAAwD,8BAAA,WAAW,EAAE,KAAKmB,iBAA1E;AAA6F,8BAAA,UAAU,EAAE,KAAKP,gBAA9G;AACI,8BAAA,QAAQ,EAAEV;AADd;AAAA;AAAA;AAAA;AAAA,oCAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,kCADI,GAcF,IAxJd,eA0JI,QAAC,KAAD;AAAO,4BAAA,IAAI,EAAE,KAAKP,KAAL,CAAWe,YAAxB;AAAsC,4BAAA,OAAO,EAAE,KAAKmE,kBAApD;AAAwE,4BAAA,KAAK,EAAE;AAAEsC,8BAAAA,GAAG,EAAE,EAAP;AAAWC,8BAAAA,KAAK,EAAE,EAAlB;AAAsBrB,8BAAAA,QAAQ,EAAE;AAAhC,6BAA/E;AAAA,oDACI,QAAC,KAAD,CAAO,MAAP;AAAc,8BAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAEI,QAAC,KAAD,CAAO,IAAP;AAAY,8BAAA,SAAS,EAAC,yBAAtB;AAAA,sDAA0D7F,QAAQ,CAAC+F,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kCA1JJ,eA8JI,QAAC,KAAD;AAAO,4BAAA,IAAI,EAAE,KAAKtG,KAAL,CAAWgB,cAAxB;AAAwC,4BAAA,OAAO,EAAE,KAAKmE,oBAAtD;AAA4E,4BAAA,KAAK,EAAE;AAAEqC,8BAAAA,GAAG,EAAE,EAAP;AAAWC,8BAAAA,KAAK,EAAE,EAAlB;AAAsBrB,8BAAAA,QAAQ,EAAE;AAAhC,6BAAnF;AAAA,oDACI,QAAC,KAAD,CAAO,MAAP;AAAc,8BAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAEI,QAAC,KAAD,CAAO,IAAP;AAAY,8BAAA,SAAS,EAAC,yBAAtB;AAAA,wDAA4D7F,QAAQ,CAAC+F,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kCA9JJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ;AAqKH;AA1KL;AAAA;AAAA;AAAA;AAAA,4BADJ;AA+KH;AA9LL;AAAA;AAAA;AAAA;AAAA;AAHR,iBAAgD,KAAKvG,KAAL,CAAWoC,IAAX,KAAoB,IAApB,GAA2B,KAAKpC,KAAL,CAAWoC,IAAX,CAAgBe,GAA3C,GAAiD,IAAjG;AAAA;AAAA;AAAA;AAAA;AAHR,eAAiD,KAAKnD,KAAL,CAAWoC,IAAX,KAAoB,IAApB,GAA2B,KAAKpC,KAAL,CAAWoC,IAAX,CAAgBe,GAA3C,GAAiD,IAAlG;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AA4NH;;AA9dwC;;AAie7C,eAAetD,cAAf","sourcesContent":["import React from 'react';\nimport DeletePlaylistModal from '../modals/DeletePlaylistModal.js';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { Query, Mutation } from 'react-apollo'\nimport * as Icon from 'react-bootstrap-icons'\n\nimport EditPlaylistNameModal from '../modals/EditPlaylistNameModal.js';\nimport CopyPlaylistModal from '../modals/CopyPlaylistModal.js';\nimport PlaylistSong from './PlaylistSong'\nimport ChangePrivacyModal from '../modals/ChangePrivacyModal.js';\nimport CollaboratorSettingsModal from '../modals/CollaboratorSettingsModal.js';\nimport { Toast } from 'react-bootstrap';\n\nvar arraySort = require('array-sort');\n\nconst GET_PLAYLIST = gql`\n    query playlist($playlistID: String) {\n        playlist(id: $playlistID) {\n            _id\n            collaborators\n            genre\n            numPlays\n            numTracks\n            ownerName\n            ownerID\n            playlistPoints\n            privacyType\n            songs {\n                title\n                videoId\n                artistID\n                artistName\n                albumName\n                genre\n                albumArt\n                lastUpdated\n            }\n            title\n        }\n    }\n`;\nconst UPDATE_PLAYLIST_POINTS = gql`\n    mutation updatePlaylistPoints(\n        $id: String!\n        $playlistPoints: Int!\n    ) {\n        updatePlaylistPoints(\n            id: $id\n            playlistPoints: $playlistPoints\n        ) {\n            _id\n        }\n    }\n\n`\n\n\n\nconst UPDATE_VOTED_PLAYLISTS = gql`\n    mutation updateVotedPlaylists(\n        $id: String!\n        $votedPlaylists: [VotedPlaylistInput]!\n    ) {\n    updateVotedPlaylists(\n        id: $id\n        votedPlaylists: $votedPlaylists\n    ) {\n        _id\n    }\n}\n`\n\nconst UPDATE_USER_POINTS = gql`\n    mutation updateUserPoints(\n        $id: String!\n        $userPoints: Int!\n    ) {\n    updateUserPoints(\n        id: $id\n        userPoints: $userPoints\n    ) {\n        _id\n    }\n}\n`\n\nconst UPDATE_PLAYLIST_SONGS = gql`\n    mutation updatePlaylistSongs(\n        $id: String!\n        $songs: [SongInput]!\n    ) {\n        updatePlaylistSongs(\n            id: $id\n            songs: $songs\n        ) {\n            _id\n        }\n    }\n`\nconst UPDATE_RECENTLY_PLAYED = gql`\n    mutation updateRecentlyPlayed(\n        $id: String!\n        $recentlyPlayed: [String]!\n    ) {\n        updateRecentlyPlayed(\n            id: $id\n            recentlyPlayed: $recentlyPlayed\n        ) {\n            _id\n        }\n    }\n`\nconst UPDATE_FOLLOWED_PLAYLISTS = gql`\n    mutation updateFollowedPlaylists(\n        $id: String!\n        $followedPlaylistsID: [String]!\n    ) {\n        updateFollowedPlaylists(\n            id: $id\n            followedPlaylistsID: $followedPlaylistsID\n        ) {\n            _id\n        }\n    }\n`\n\nconst GET_USER = gql`\n    query user($userId: String) {\n        user(id: $userId) {\n            _id\n            email\n            password\n            username\n            userPoints\n            collaborativePlaylistsID\n            followedPlaylistsID\n            ownedPlaylistsID\n            recentlyPlayed\n            mostPlayed {\n                playlistId\n                count\n            }\n            votedPlaylists {\n                playlistID\n                votes\n            }\n            votedSOTD\n        }\n    }\n`\n\nclass PlaylistScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(\"Passed props to playlistScreen\");\n    }\n\n    state = {\n        showDelete: false,\n        showEditName: false,\n        showDropdown: false,\n        showPrivacy: false,\n        showCollab: false,\n        hasVoted: false,\n        playlist: null,\n        vote: 0,\n        songs: null,\n        sort: 0,\n        attrSorting: \"\",\n        hovered: false,\n        hoveredDown: false,\n        owner: null,\n        showFollowed: false,\n        showUnfollowed: false\n    }\n\n    handleShowCollab = () => {\n        this.setState({ showCollab: true })\n    }\n\n    handleShowPrivacy = () => {\n        this.setState({ showPrivacy: true })\n    }\n\n    handleShowDelete = () => {\n        this.setState({ showDelete: true });\n        console.log(\"done\");\n    }\n\n    handleShowEditName = () => {\n        this.setState({ showEditName: true })\n    }\n\n    handleCloseCollab = () => {\n        this.setState({ showCollab: false })\n    }\n\n    handleClosePrivacy = () => {\n        this.setState({ showPrivacy: false })\n    }\n    handleShowCopyPlaylist = () => {\n        this.setState({ showCopyPlaylist: true })\n    }\n\n    handleCloseDelete = () => {\n        this.setState({ showDelete: false });\n        console.log(\"dosne\");\n    }\n\n    handleCloseCopyPlaylist = () => {\n        this.setState({ showCopyPlaylist: false });\n        console.log(\"copy done\");\n    }\n\n    handleCloseEditName = () => {\n        this.setState({ showEditName: false })\n    }\n\n    toggleDropdown = () => {\n        let show = !this.state.showDropdown;\n        this.setState({ showDropdown: show })\n    }\n\n\n    toggleDisable = () => {\n        for (let k in this.props.user.votedPlaylists) {\n            console.log(k)\n            if (this.props.user.votedPlaylists[k] === this.props.match.params.id) {\n                this.setState({ hasVoted: true });\n                console.log('found playlistID in votedplaylists')\n            }\n        }\n\n        if (this.state.hasVoted) {\n            let vote = this.props.user.votedPlaylists.findIndex(x => x.playlistID === this.props.match.params.id).votes\n            if (vote == -1) {\n                this.setState({ vote: -1 });\n                console.log('has already disliked')\n\n            }\n            else if (vote == 1) {\n                this.setState({ vote: 1 });\n                console.log('has already liked')\n\n            }\n        }\n    }\n\n    handlePlaylistVote = (vote, playlist, updateVotedPlaylists, updatePlaylistPoints, updateUserPoints, owner) => {\n\n        console.log(\"liking song\")\n        let votesList = this.props.user.votedPlaylists;\n        let idx = votesList.findIndex(votesList => votesList.playlistID === playlist._id);\n        let points = playlist.playlistPoints\n\n        //let userPoints = this.state.owner.userPoints;\n        let userPoints = owner.userPoints;\n\n        if (idx == -1) { //if hasn't voted already\n            votesList.push({ playlistID: playlist._id, votes: vote })\n            points += vote\n            userPoints += vote\n        }\n        else {\n            if (votesList[idx].votes == vote) { //if clicks on same button again\n                points -= vote\n                userPoints -= vote\n                votesList.splice(idx, 1)\n\n            }\n\n            else {\n                points += vote * 2\n                userPoints += vote * 2\n                votesList[idx].votes = vote;\n                //  votesList.push(votedPlaylist)\n            }\n        }\n\n        updateVotedPlaylists({\n            variables: {\n                id: this.props.user._id,\n                votedPlaylists: votesList\n            }\n        });\n\n        updateVotedPlaylists({\n            variables: {\n                id: this.props.user._id,\n                votedPlaylists: votesList\n            }\n        });\n        updatePlaylistPoints({\n            variables: {\n                id: playlist._id,\n                playlistPoints: points\n            }\n        })\n        updateUserPoints({\n            variables: {\n                id: playlist.ownerID,\n                userPoints: userPoints\n            }\n        })\n        this.setState({ vote: vote });\n\n    }\n\n\n\n    updateRecents = (updateRecentlyPlayed, playlist) => {\n        let recentlyPlayed = this.props.user.recentlyPlayed;\n        let idx = recentlyPlayed.indexOf(playlist._id);\n\n        if (idx == -1) {\n            //then push to arr\n            recentlyPlayed.push(playlist._id)\n        }\n        else {\n            //slice and append\n            recentlyPlayed.splice(idx, 1)\n            recentlyPlayed.push(playlist._id)\n\n        }\n        updateRecentlyPlayed({\n            variables: {\n                id: this.props.user._id,\n                recentlyPlayed: recentlyPlayed\n            }\n        });\n        //mostplayed here\n    }\n\n\n    handleSortBy = (dbSongs, e) => {\n        let sortBy = e.target.id;\n        let songs = this.state.songs;\n        let sorted = JSON.parse(JSON.stringify(this.state.songs));\n        // Reset sorting by when sorting attribute changes\n        let sort = this.state.attrSorting === sortBy ? this.state.sort : 0;\n\n        if (sort == 0) { // If songs are not sorted, sort by A-Z\n            arraySort(sorted, sortBy);\n            sort += 1;\n        }\n        else if (sort == 1) {// If the songs are already sorted by A-Z, then sort by Z-A\n            arraySort(sorted, sortBy, { reverse: true });\n            sort += 1;\n        }\n        else {\n            sorted = dbSongs;\n            sort = 0;\n        }\n        this.setState({ songs: sorted, sort: sort, attrSorting: sortBy });\n    }\n\n    handleDeleteFromState = (index) => {\n        let newSongs = this.state.songs\n        newSongs.splice(index, 1)\n        this.setState({ songs: newSongs })\n    }\n\n    followPlaylist = (user, playlist, updateFollowedPlaylists) => {\n        let followedPlaylists = user.followedPlaylistsID\n        followedPlaylists.push(playlist._id)\n        updateFollowedPlaylists({ variables: { id: user._id, followedPlaylistsID: followedPlaylists } })\n        this.handleShowFollowed()\n    }\n\n    unfollowPlaylist = (user, playlist, updateFollowedPlaylists) => {\n        let followedPlaylists = user.followedPlaylistsID\n        let index = followedPlaylists.findIndex(playlistID => playlistID === playlist._id)\n        followedPlaylists.splice(index, 1)\n        updateFollowedPlaylists({ variables: { id: user._id, followedPlaylistsID: followedPlaylists } })\n        this.handleShowUnfollowed()\n    }\n\n    handleShowFollowed = () => {\n        this.setState({ showFollowed: true })\n    }\n\n    handleHideFollowed = () => {\n        this.setState({ showFollowed: false })\n    }\n\n    handleShowUnfollowed = () => {\n        this.setState({ showUnfollowed: true })\n    }\n\n    handleHideUnfollowed = () => {\n        this.setState({ showUnfollowed: false })\n    }\n\n    handleQueuePlaylist = (songs) => {\n        for (let x = 0; x < songs.length; x++) {\n            this.props.handleQueueSong(songs[x]);\n        }\n    }\n\n    render() {\n        let playlist;\n        let user = this.props.user, collaborators;\n        let owned, loggedIn = this.props.user != null;\n        let songs, dbSongs;\n        let sort = this.state.sort, attrSorting = this.state.attrSorting;\n        let privacyType;\n        console.log(this.state.songs);\n        let owner = null;\n        let followed\n        return (\n            <Mutation mutation={UPDATE_FOLLOWED_PLAYLISTS}>\n                {(updateFollowedPlaylists, { loading, error }) => (\n                    <Mutation mutation={UPDATE_RECENTLY_PLAYED} >\n                        {(updateRecentlyPlayed, { loading, error }) => (\n                            <Mutation mutation={UPDATE_VOTED_PLAYLISTS} >\n                                {(updateVotedPlaylists, { loading, error }) => (\n                                    <Mutation mutation={UPDATE_USER_POINTS} >\n                                        {(updateUserPoints, { loading, error }) => (\n                                            <Mutation mutation={UPDATE_PLAYLIST_POINTS} key={this.props.user !== null ? this.props.user._id : null} >\n                                                {(updatePlaylistPoints, { loading, error }) => (\n\n                                                    <Mutation mutation={UPDATE_PLAYLIST_SONGS} key={this.props.user !== null ? this.props.user._id : null} >\n                                                        {(updatePlaylistSongs, { loading, error }) => (\n\n                                                            <Query pollInterval={500} query={GET_PLAYLIST} variables={{ playlistID: this.props.match.params.id }}\n                                                                onCompleted={data => this.state.songs == null || this.state.songs !== data ? this.setState({ songs: data.playlist.songs }) : \"\"}>\n                                                                {({ loading, error, data }) => {\n                                                                    if (loading) return 'Loading...';\n                                                                    if (error) return `Error! ${error.message}`;\n                                                                    else {\n                                                                        playlist = data.playlist;\n                                                                        owned = loggedIn ? user._id == playlist.ownerID : false;\n                                                                        collaborators = playlist.collaborators;\n                                                                        if (this.state.songs == null) this.setState({ songs: playlist.songs })\n                                                                        songs = this.state.songs !== null ? this.state.songs : playlist.songs;\n                                                                        dbSongs = playlist.songs;\n                                                                        followed = loggedIn ? user.followedPlaylistsID.find(playlistID => playlist._id) : null\n                                                                        privacyType = playlist.privacyType\n                                                                    }\n                                                                    return (\n                                                                        <Query pollInterval={500} query={GET_USER} variables={{ userId: playlist.ownerID }}>\n                                                                            {({ loading, error, data }) => {\n                                                                                if (loading) return 'Loading...';\n                                                                                if (error) return `Error! ${error.message}`;\n                                                                                else owner = data.user;\n                                                                                return (\n                                                                                    <div id=\"playlist\" className=\"playpage\" style={{ position: 'sticky', left: 15 }} >\n                                                                                        <div className=\"row\" >\n                                                                                            <div id=\"top\" className=\"col ml-3 \">\n                                                                                                <div className=\"row\">\n                                                                                                    <div id=\"playlistInfoAndActions\" className=\"col-8\">\n                                                                                                        <div id=\"playlistName\" className=\"row\">\n                                                                                                            <h1 className=\"text-light ml-4 mt-5\">{playlist.title + \" \"}\n                                                                                                                {privacyType == 0 ?\n                                                                                                                    <Icon.Globe2 color=\"#3d8af7\" size={20} />\n                                                                                                                    : <Icon.LockFill color=\"#3d8af7\" size={20} />\n                                                                                                                }\n                                                                                                                {\" \"}\n                                                                                                                {collaborators.length !== 0 ? <Icon.PeopleFill color=\"#3d8af7\" size={20} /> : null}\n                                                                                                            </h1>\n                                                                                                        </div>\n                                                                                                        <div id=\"playlistOwner\" className=\"row\">\n                                                                                                        {data.user && data.user._id !== \"5fdc52a21d96445e6ab4d805\" ?\n                                                                                                            <Link to={`/app/profile/${playlist.ownerID}`}>\n                                                                                                                <h4 className=\"text-light ml-4\"> Playlist by {playlist.ownerName} </h4>\n                                                                                                            </Link> :\n                                                                                                            <h4 className=\"text-light ml-4\"> Playlist by Marvin's Studio</h4>\n                                                                                                        }\n                                                                                                        </div>\n                                                                                                        <div id=\"actions\" className=\"row overflow-visible ml-3\" style={{ marginTop: 60 }}>\n                                                                                                            <button className='btn btn-outline-primary border-0 bg-transparent'\n                                                                                                                //onClick={this.handlePlayAllP(playlist.songs, updateRecentlyPlayed, playlist)}\n                                                                                                                //    updateRecents = (updateRecentlyPlayed, playlist) => {\n                                                                                                                onClick={() => {\n                                                                                                                    if (loggedIn) this.updateRecents(updateRecentlyPlayed, playlist);\n                                                                                                                    this.props.handlePlayPlaylist(songs);\n                                                                                                                }\n                                                                                                                }>\n                                                                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"41\" height=\"41\" fill=\"currentColor\" className=\"bi bi-play-circle-fill\" viewBox=\"0 0 16 16\">\n                                                                                                                    <path fillRule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\n                                                                                                                </svg>\n                                                                                                            </button>\n                                                                                                            {owned ?\n                                                                                                                <button className='btn btn-outline-primary border-0 bg-transparent' onClick={this.handleShowDelete}>\n                                                                                                                    <Icon.TrashFill style={{ fontSize: 43 }} />\n                                                                                                                </button>\n                                                                                                                : <div />}\n                                                                                                            <Dropdown direction='right' toggle={this.toggleDropdown} isOpen={this.state.showDropdown}>\n                                                                                                                <DropdownToggle className='btn btn-outline-primary border-0 bg-transparent' caret={false}>\n                                                                                                                    <Icon.ThreeDots style={{ fontSize: 54, marginLeft: -5 }} />\n                                                                                                                </DropdownToggle>\n                                                                                                                {owned ?\n                                                                                                                    <DropdownMenu>\n                                                                                                                        <DropdownItem onClick={this.handleShowCopyPlaylist}>Copy Playlist</DropdownItem>\n                                                                                                                        <DropdownItem onClick={this.handleShowCollab}>Collaborator Settings</DropdownItem>\n                                                                                                                        <DropdownItem onClick={this.handleShowEditName}>Edit Playlist Name</DropdownItem>\n                                                                                                                        <DropdownItem onClick={this.handleShowPrivacy}>Privacy Settings</DropdownItem>\n                                                                                                                    </DropdownMenu> :\n                                                                                                                    <DropdownMenu>\n                                                                                                                        <DropdownItem onClick={this.handleShowCopyPlaylist}>Copy Playlist</DropdownItem>\n                                                                                                                        {followed ?\n                                                                                                                            <DropdownItem onClick={() => this.unfollowPlaylist(user, playlist, updateFollowedPlaylists)}>Unfollow Playlist</DropdownItem> :\n                                                                                                                            <DropdownItem onClick={() => this.followPlaylist(user, playlist, updateFollowedPlaylists)}>Follow Playlist</DropdownItem>\n                                                                                                                        }\n                                                                                                                        <DropdownItem onClick={this.handleQueuePlaylist.bind(this, songs)}>Queue entire playlist</DropdownItem>\n                                                                                                                    </DropdownMenu>\n                                                                                                                }\n                                                                                                            </Dropdown>\n                                                                                                        </div>\n                                                                                                    </div>\n\n                                                                                                    <div id=\"imgAndVotes\" className=\"col-3 ml-2 mt-3\" >\n                                                                                                        <div className=\"row mt-4 mb-2 justify-content-center\">\n                                                                                                            <a>\n                                                                                                                <input type=\"image\" style={{ height: 170 }}\n                                                                                                                    src={songs[0] ? songs[0].albumArt : \"https://dalelyles.com/musicmp3s/no_cover.jpg\"}>\n                                                                                                                </input>\n                                                                                                            </a>\n                                                                                                        </div>\n                                                                                                        <div className=\"row justify-content-center\">\n                                                                                                            {this.props.user ? <button className='col-2 mx-0 btn btn-outline-primary bg-transparent border-0'\n                                                                                                                onClick={this.handlePlaylistVote.bind(this, 1, playlist, updateVotedPlaylists, updatePlaylistPoints, updateUserPoints, owner)} onMouseOut={() => this.setState({ hovered: true })}\n                                                                                                                onMouseOver={() => this.setState({ hovered: false })}>\n                                                                                                                {this.state.vote == 1 ? <Icon.HandThumbsUp style={{ fontSize: 30, marginBottom: 5, color: '#3d8af7' }} /> : <Icon.HandThumbsUp style={{ fontSize: 30, marginBottom: 5, color: 'white', transform: `${this.state.hovered ? 'scale(1,1)' : 'scale(1.2,1.2)'}` }} />}\n                                                                                                            </button> : <h3 className=\"text-light\">Playlist votes</h3>}\n                                                                                                            <div id=\"playlistPoints\" className=\"col-3 mx-0 mt-auto h4 text-light text-center\" style={{ marginBottom: 12, fontSize: 25 }}>{playlist.playlistPoints}</div>\n                                                                                                            {this.props.user ?\n                                                                                                                <button className='col-2 mx-0 btn btn-outline-primary bg-transparent border-0'\n                                                                                                                    onClick={this.handlePlaylistVote.bind(this, -1, playlist, updateVotedPlaylists, updatePlaylistPoints, updateUserPoints, owner)} onMouseOut={() => this.setState({ hoveredDown: true })}\n                                                                                                                    onMouseOver={() => this.setState({ hoveredDown: false })}>\n                                                                                                                    {this.state.vote == -1 ? <Icon.HandThumbsDown style={{ fontSize: 30, marginBottom: 5, color: '#3d8af7' }} /> : <Icon.HandThumbsDown style={{ fontSize: 30, marginBottom: 5, color: 'white', transform: `${this.state.hoveredDown ? 'scale(1,1)' : 'scale(1.2,1.2)'}` }} />}\n                                                                                                                </button>\n                                                                                                                : null}\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div className=\"row mt-1 ml-2\" >\n                                                                                            <div className=\"col-3\" onClick={this.handleSortBy.bind(this, dbSongs)}>\n                                                                                                <h3 id=\"title\" className='text-header'>Title\n                                                                                                 {sort != 0 && attrSorting === \"title\" ?\n                                                                                                        sort == 1 ? <Icon.ArrowUpShort color='royalblue' /> : <Icon.ArrowDownShort color='royalblue' />\n                                                                                                        : null\n                                                                                                    }\n                                                                                                </h3>\n\n                                                                                            </div>\n                                                                                            <div className=\"col-2\" onClick={this.handleSortBy.bind(this, dbSongs)}>\n                                                                                                <h3 id=\"artistName\" className='text-header'>Artist\n                                                                                                 {sort != 0 && attrSorting === \"artistName\" ?\n                                                                                                        sort == 1 ? <Icon.ArrowUpShort color='royalblue' /> : <Icon.ArrowDownShort color='royalblue' />\n                                                                                                        : null\n                                                                                                    }\n                                                                                                </h3>\n                                                                                            </div>\n                                                                                            <div className=\"col-2\" onClick={this.handleSortBy.bind(this, dbSongs)}>\n                                                                                                <h3 id=\"albumName\" className='text-header'>Album\n                                                                                                {sort != 0 && attrSorting === \"albumName\" ?\n                                                                                                        sort == 1 ? <Icon.ArrowUpShort color='royalblue' /> : <Icon.ArrowDownShort color='royalblue' />\n                                                                                                        : null\n                                                                                                    }\n                                                                                                </h3>\n                                                                                            </div>\n                                                                                            <div className=\"col-3\" onClick={this.handleSortBy.bind(this, dbSongs)}>\n                                                                                                <h3 id=\"lastUpdated\" className='text-header'>Date Added\n                                                                                                {sort != 0 && attrSorting === \"lastUpdated\" ?\n                                                                                                        sort == 1 ? <Icon.ArrowUpShort color='royalblue' /> : <Icon.ArrowDownShort color='royalblue' />\n                                                                                                        : null\n                                                                                                    }\n                                                                                                </h3>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div className=\"divider song-divider\" style={{ borderColor: \"#545454\" }} />\n\n                                                                                        {\n                                                                                            songs.map((song, index) => (\n                                                                                                <PlaylistSong key={index} loggedIn={loggedIn} collaborators={collaborators} user={user} index={index} style={{ cursor: 'pointer' }}\n                                                                                                    handleSongChange={this.props.handleSongChange} handleQueueSong={this.props.handleQueueSong} updateRecents={this.updateRecents}\n                                                                                                    song={song} updatePlaylistSongs={updatePlaylistSongs} playlist={playlist} handleDeleteFromState={this.handleDeleteFromState} stateSongs={this.state.songs} updateRecentlyPlayed={updateRecentlyPlayed} />\n                                                                                            ))\n                                                                                        }\n\n                                                                                        {\n                                                                                            loggedIn ?\n                                                                                                <div>\n                                                                                                    <DeletePlaylistModal show={this.state.showDelete} handleClose={this.handleCloseDelete} handleShow={this.handleShowDelete}\n                                                                                                        user={this.props.user} history={this.props.history} playlist={playlist} />\n                                                                                                    <EditPlaylistNameModal show={this.state.showEditName} handleClose={this.handleCloseEditName} handleShow={this.handleShowEditName}\n                                                                                                        user={this.props.user} playlist={playlist} />\n                                                                                                    <CopyPlaylistModal show={this.state.showCopyPlaylist} handleClose={this.handleCloseCopyPlaylist} handleShow={this.handleShowCopyPlaylist}\n                                                                                                        user={this.props.user} history={this.props.history} playlist={playlist} />\n\n                                                                                                    <ChangePrivacyModal show={this.state.showPrivacy} handleClose={this.handleClosePrivacy} handleShow={this.handleShowPrivacy}\n                                                                                                        playlist={playlist} />\n                                                                                                    <CollaboratorSettingsModal show={this.state.showCollab} handleClose={this.handleCloseCollab} handleShow={this.handleShowCollab}\n                                                                                                        playlist={playlist} />\n                                                                                                </div>\n                                                                                                : null\n                                                                                        }\n                                                                                        <Toast show={this.state.showFollowed} onClose={this.handleHideFollowed} style={{ top: 10, right: 20, position: \"fixed\" }}>\n                                                                                            <Toast.Header closeButton>Successfully Followed Playlist</Toast.Header>\n                                                                                            <Toast.Body className='bg-white rounded-bottom'>Followed {playlist.title}!</Toast.Body>\n                                                                                        </Toast>\n                                                                                        <Toast show={this.state.showUnfollowed} onClose={this.handleHideUnfollowed} style={{ top: 10, right: 20, position: \"fixed\" }}>\n                                                                                            <Toast.Header closeButton>Successfully Unfollowed Playlist</Toast.Header>\n                                                                                            <Toast.Body className='bg-white rounded-bottom'>Unfollowed {playlist.title}</Toast.Body>\n                                                                                        </Toast>\n                                                                                    </div >\n                                                                                )\n                                                                            }\n                                                                            }\n                                                                        </Query >\n                                                                    )\n                                                                }}\n                                                            </Query >\n                                                        )}\n                                                    </Mutation >\n                                                )}\n                                            </Mutation >\n                                        )}\n                                    </Mutation >\n                                )}\n                            </Mutation >\n                        )}\n                    </Mutation >\n                )}\n            </Mutation >\n        )\n    }\n}\n\nexport default PlaylistScreen;\n"]},"metadata":{},"sourceType":"module"}
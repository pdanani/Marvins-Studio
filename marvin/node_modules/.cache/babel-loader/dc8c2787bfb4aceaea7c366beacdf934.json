{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/home_screen/sotd.js\";\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport * as Icon from 'react-bootstrap-icons';\nconst UPDATE_SOTD = gql`\n    mutation updateSongs(\n        $id: String!\n        $song1: sotdInput!\n        $song2: sotdInput!\n        $song3: sotdInput!\n    ) {\n        updateSongs(\n            id: $id\n            song1: $song1\n            song2: $song2\n            song3: $song3\n        ) {\n            _id\n        }\n    }\n`;\nconst UPDATE_USER_POINTS = gql`\n    mutation updateUserPoints(\n        $id: String!\n        $userPoints: Int!\n    ) {\n    updateUserPoints(\n        id: $id\n        userPoints: $userPoints\n    ) {\n        _id\n    }\n}\n`;\nconst UPDATE_USER_SOTD = gql`\n    mutation updateUserSOTDVote(\n        $id: String!\n        $votedSOTD: Int!\n    ) {\n        updateUserSOTDVote(\n            id: $id\n            votedSOTD: $votedSOTD\n        ) {\n            _id\n        }\n    }\n`;\n\nclass sotd extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSOTDVote = (sotds, index, user, updateSOTD, updateUserSOTD, updateUserPoints) => {\n      console.log(\"voted!\");\n      let userPoints = user.userPoints;\n\n      if (user.votedSOTD - 1 === index) {\n        sotds[index].sotdVotes -= 1;\n        index = 0;\n        userPoints -= 3; //remove points\n      }\n\n      if (user.votedSOTD === 0) {\n        sotds[index].sotdVotes += 1;\n        index += 1;\n        userPoints += 3; //add points\n      }\n\n      sotds.forEach(sotd => {\n        delete sotd['__typename'];\n        delete sotd.song['__typename'];\n      });\n      updateUserPoints({\n        variables: {\n          id: user._id,\n          userPoints: userPoints\n        }\n      });\n      updateSOTD({\n        variables: {\n          id: \"5fc69c8b61fdeb5194781f2f\",\n          song1: sotds[0],\n          song2: sotds[1],\n          song3: sotds[2]\n        }\n      });\n      updateUserSOTD({\n        variables: {\n          id: user._id,\n          votedSOTD: index\n        }\n      });\n    };\n  }\n\n  render() {\n    let community = this.props.community;\n    let song = this.props.song;\n    let sotds = [community.song1, community.song2, community.song3];\n    let index = sotds.findIndex(sotd => sotd.song.videoId === song.videoId);\n    let user = this.props.user;\n    return /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: UPDATE_USER_POINTS,\n      children: (updateUserPoints, {\n        loading,\n        error\n      }) => /*#__PURE__*/_jsxDEV(Mutation, {\n        mutation: UPDATE_USER_SOTD,\n        children: (updateUserSOTD, {\n          loading,\n          error\n        }) => /*#__PURE__*/_jsxDEV(Mutation, {\n          mutation: UPDATE_SOTD,\n          children: (updateSOTD, {\n            loading,\n            error\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pt-2 text-center d-block overflow-hidden text-nowrap text-truncate\",\n              style: {\n                textOverflow: 'ellipsis'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"h5 text-playlist\",\n                onClick: this.props.handleSongChange.bind(this, song),\n                style: {\n                  width: \"70%\"\n                },\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"position-relative mb-3  \",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"rounded\",\n                  src: song.albumArt,\n                  style: {\n                    height: 150,\n                    width: 150\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 45\n              }, this), user !== null ? user.votedSOTD !== 0 ? user.votedSOTD != index + 1 && user.votedSOTD != 0 ? /*#__PURE__*/_jsxDEV(Icon.HandThumbsUp, {\n                size: 30,\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 138\n              }, this) : /*#__PURE__*/_jsxDEV(Icon.HandThumbsUp, {\n                size: 30,\n                color: \"#3d8af7\",\n                onClick: this.handleSOTDVote.bind(this, sotds, index, user, updateSOTD, updateUserSOTD, updateUserPoints),\n                onMouseOut: () => this.setState({\n                  hovered: true\n                }),\n                onMouseOver: () => this.setState({\n                  hovered: false\n                }),\n                style: {\n                  cursor: \"pointer\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(Icon.HandThumbsUp, {\n                size: 30,\n                color: \"white\",\n                onMouseOut: () => this.setState({\n                  hovered: true\n                }),\n                onMouseOver: () => this.setState({\n                  hovered: false\n                }),\n                onClick: this.handleSOTDVote.bind(this, sotds, index, user, updateSOTD, updateUserSOTD, updateUserPoints),\n                style: {\n                  cursor: \"pointer\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 49\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default sotd;","map":{"version":3,"sources":["/Users/pawan/Desktop/Marvins-Studio/marvin/src/components/home_screen/sotd.js"],"names":["React","Component","gql","Mutation","Icon","UPDATE_SOTD","UPDATE_USER_POINTS","UPDATE_USER_SOTD","sotd","handleSOTDVote","sotds","index","user","updateSOTD","updateUserSOTD","updateUserPoints","console","log","userPoints","votedSOTD","sotdVotes","forEach","song","variables","id","_id","song1","song2","song3","render","community","props","findIndex","videoId","loading","error","textOverflow","handleSongChange","bind","width","title","albumArt","height","setState","hovered","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport gql from 'graphql-tag'\nimport { Mutation } from 'react-apollo'\n\nimport * as Icon from 'react-bootstrap-icons'\n\nconst UPDATE_SOTD = gql`\n    mutation updateSongs(\n        $id: String!\n        $song1: sotdInput!\n        $song2: sotdInput!\n        $song3: sotdInput!\n    ) {\n        updateSongs(\n            id: $id\n            song1: $song1\n            song2: $song2\n            song3: $song3\n        ) {\n            _id\n        }\n    }\n`\nconst UPDATE_USER_POINTS = gql`\n    mutation updateUserPoints(\n        $id: String!\n        $userPoints: Int!\n    ) {\n    updateUserPoints(\n        id: $id\n        userPoints: $userPoints\n    ) {\n        _id\n    }\n}\n`\n\nconst UPDATE_USER_SOTD = gql`\n    mutation updateUserSOTDVote(\n        $id: String!\n        $votedSOTD: Int!\n    ) {\n        updateUserSOTDVote(\n            id: $id\n            votedSOTD: $votedSOTD\n        ) {\n            _id\n        }\n    }\n`\n\nclass sotd extends Component {\n\n\n    handleSOTDVote = (sotds, index, user, updateSOTD, updateUserSOTD, updateUserPoints) => {\n        console.log(\"voted!\");\n        let userPoints=user.userPoints\n        if (user.votedSOTD - 1 === index) {\n            sotds[index].sotdVotes -= 1;\n            index = 0\n            userPoints-=3\n           //remove points\n        }\n        if (user.votedSOTD === 0) {\n            sotds[index].sotdVotes += 1;\n            index += 1;\n            userPoints+=3\n            //add points\n        }\n        sotds.forEach(sotd => {\n            delete sotd['__typename'];\n            delete sotd.song['__typename'];\n        })\n\n        updateUserPoints({\n            variables: {\n                id: user._id,\n                userPoints: userPoints\n            }\n        })            \n        updateSOTD({\n            variables: {\n                id: \"5fc69c8b61fdeb5194781f2f\",\n                song1: sotds[0],\n                song2: sotds[1],\n                song3: sotds[2]\n            }\n        })\n        updateUserSOTD({\n            variables: {\n                id: user._id,\n                votedSOTD: index\n            }\n\n        })\n    }\n    render() {\n        let community = this.props.community;\n        let song = this.props.song;\n        let sotds = [community.song1, community.song2, community.song3];\n        let index = sotds.findIndex(sotd => sotd.song.videoId === song.videoId);\n        let user = this.props.user;\n        return (\n            <Mutation mutation={UPDATE_USER_POINTS} >\n                {(updateUserPoints, { loading, error }) => (\n                    <Mutation mutation={UPDATE_USER_SOTD}>\n                        {(updateUserSOTD, { loading, error }) => (\n                            <Mutation mutation={UPDATE_SOTD}>\n                                {(updateSOTD, { loading, error }) => (\n                                    <div>\n                                        <div className='pt-2 text-center d-block overflow-hidden text-nowrap text-truncate' style={{ textOverflow: 'ellipsis' }}>\n                                            <a className='h5 text-playlist' onClick={this.props.handleSongChange.bind(this, song)} style={{width:\"70%\"}}>{song.title}</a>\n                                            <div className='position-relative mb-3  '>\n                                                <img className='rounded' src={song.albumArt} style={{ height: 150, width: 150 }} />\n                                            </div>\n                                            {user !== null ? user.votedSOTD !== 0 ? user.votedSOTD != index + 1 && user.votedSOTD != 0 ? <Icon.HandThumbsUp size={30} color=\"white\" /> :\n                                                <Icon.HandThumbsUp size={30} color=\"#3d8af7\" onClick={this.handleSOTDVote.bind(this, sotds, index, user, updateSOTD, updateUserSOTD, updateUserPoints)} onMouseOut={() => this.setState({ hovered: true })}\n                                                    onMouseOver={() => this.setState({ hovered: false })} style={{ cursor: \"pointer\" }} /> :\n                                                <Icon.HandThumbsUp size={30} color=\"white\" onMouseOut={() => this.setState({ hovered: true })}\n                                                    onMouseOver={() => this.setState({ hovered: false })} onClick={this.handleSOTDVote.bind(this, sotds, index, user, updateSOTD, updateUserSOTD, updateUserPoints)} style={{ cursor: \"pointer\" }} /> : null\n                                            }\n                                            {/* <Icon.HandThumbsUp size={30} color=\"white\" onClick={this.handleSOTDVote.bind(this, sotds, index, user, updateSOTD, updateUserSOTD)}/> */}\n                                        </div>\n                                    </div>\n                                )}\n                            </Mutation>\n                        )}\n                    </Mutation>\n                )}\n            </Mutation>\n        )\n    }\n}\n\nexport default sotd;"]},"metadata":{},"sourceType":"module"}